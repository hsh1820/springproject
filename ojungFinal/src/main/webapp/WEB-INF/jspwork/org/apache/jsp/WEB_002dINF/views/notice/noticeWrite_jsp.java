/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2020-03-26 16:11:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.notice;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class noticeWrite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1583419384000L));
    _jspx_dependants.put("jar:file:/C:/workspace/RealFinal/ojungFinal/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/workspace/RealFinal/ojungFinal/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>(주) 오정상사 그룹웨어 - 전자결재</title>\n");
      out.write("<!-- Tell the browser to be responsive to screen width -->\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("<!-- Font Awesome -->\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("\thref=\"");
      out.print(request.getContextPath() );
      out.write("/resources/plugins/fontawesome-free/css/all.min.css\">\n");
      out.write("<!-- Ionicons -->\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("\thref=\"https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css\">\n");
      out.write("<!-- Theme style -->\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("\thref=\"");
      out.print(request.getContextPath() );
      out.write("/resources/dist/css/adminlte.min.css\">\n");
      out.write("<!-- Google Font: Source Sans Pro -->\n");
      out.write("<link\n");
      out.write("\thref=\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700\"\n");
      out.write("\trel=\"stylesheet\">\n");
      out.write("<!-- summernote -->\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("\thref=\"");
      out.print(request.getContextPath() );
      out.write("/resources/plugins/summernote/summernote-bs4.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<body class=\"hold-transition sidebar-mini\">\n");
      out.write("\t<div class=\"wrapper\">\n");
      out.write("\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/nav.jsp", out, false);
      out.write('\n');
      out.write('	');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/sidebar.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("\t\t<!-- Content Wrapper. Contains page content -->\n");
      out.write("\t\t<div class=\"content-wrapper\">\n");
      out.write("\t\t\t<!-- Content Header (Page header) -->\n");
      out.write("\t\t\t<section class=\"content-header\">\n");
      out.write("\t\t\t\t<div class=\"container-fluid\">\n");
      out.write("\t\t\t\t\t<div class=\"row mb-2\">\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-6\">\n");
      out.write("\t\t\t\t\t\t\t<h1>공지사항 작성</h1>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-6\">\n");
      out.write("\t\t\t\t\t\t\t<ol class=\"breadcrumb float-sm-right\">\n");
      out.write("\t\t\t\t\t\t\t\t<li class=\"breadcrumb-item\"><a href=\"#\">Home</a></li>\n");
      out.write("\t\t\t\t\t\t\t</ol>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<!-- /.container-fluid -->\n");
      out.write("\t\t\t</section>\n");
      out.write("\n");
      out.write("\t\t\t<!-- Main content -->\n");
      out.write("\t\t\t<section class=\"content\">\n");
      out.write("\t\t\t\t<div class=\"row\">\n");
      out.write("\n");
      out.write("\t\t\t\t\t<!-- form 태그 시작 -->\n");
      out.write("\t\t\t\t\t<form class=\"col-md-12\" method=\"POST\" action=\"noticeWrite\" enctype=\"multipart/form-data\"\n");
      out.write("\t\t\t\t\t\trole=\"form\" onsubmit=\"return validate();\">\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-12\">\n");
      out.write("\t\t\t\t\t\t\t<div class=\"card card-outline card-primary\">\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"card-header\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-group row\" style=\"margin-bottom: 0;\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label for=\"inputTitle3\" class=\"col-md-1 col-form-label\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstyle=\"text-align: center;\" style=\"margin-bottom: 0;\">제목</label>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-10\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"inputTitle3\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tname=\"noticeTitle\" placeholder=\"제목을 입력해주세요\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"form-group col-md-1\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<select class=\"form-control\" name=\"category\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"1\">사내공지</option>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"2\">부서공지</option>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</select>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label for=\"inputTitle3\" class=\"col-md-1 col-form-label\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstyle=\"text-align: center;\" style=\"margin-bottom: 0;\">첨부파일</label>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-11\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"custom-file\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"custom-file-label\" for=\"exampleInputFile\">Choose file</label> \n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<input multiple=\"multiple\" type=\"file\" class=\"custom-file-input\" id=\"exampleInputFile\" name=\"noticeFile\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t<!-- /.card-header -->\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"card-body pad\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"mb-3\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<textarea class=\"form-control\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Place some text here\" id=\"compose-textarea\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tname=\"noticeContent\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstyle=\"width: 100%; height: 200px; font-size: 14px; line-height: 18px; border: 1px solid #dddddd; padding: 10px;\"></textarea>\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t");
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t<!-- <p class=\"text-sm mb-0\">\n");
      out.write("                Editor <a href=\"https://github.com/bootstrap-wysiwyg/bootstrap3-wysiwyg\">Documentation and license\n");
      out.write("                information.</a>\n");
      out.write("              </p> -->\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"float-right\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn primary\">등록</button>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<a href=\"noticeList\" class=\"btn primary\">목록으로</a>\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t</form>\n");
      out.write("\t\t\t\t\t<!-- form 태그 종료 -->\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<!-- /.col-->\n");
      out.write("\t\t\t</section>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<!-- ./row -->\n");
      out.write("\t\t<!-- /.content -->\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\n");
      out.write("\t</div>\n");
      out.write("\t<!-- /.content-wrapper -->\n");
      out.write("\t<!-- ./wrapper -->\n");
      out.write("\n");
      out.write("\t<!-- REQUIRED SCRIPTS -->\n");
      out.write("\n");
      out.write("\t<!-- jQuery -->\n");
      out.write("\t<script\n");
      out.write("\t\tsrc=\"");
      out.print(request.getContextPath() );
      out.write("/resources/plugins/jquery/jquery.min.js\"></script>\n");
      out.write("\t<!-- Bootstrap -->\n");
      out.write("\t<script\n");
      out.write("\t\tsrc=\"");
      out.print(request.getContextPath() );
      out.write("/resources/plugins/bootstrap/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("\t<!-- AdminLTE -->\n");
      out.write("\t<script\n");
      out.write("\t\tsrc=\"");
      out.print(request.getContextPath() );
      out.write("/resources/dist/js/adminlte.js\"></script>\n");
      out.write("\n");
      out.write("\t<!-- OPTIONAL SCRIPTS -->\n");
      out.write("\t<script src=\"");
      out.print(request.getContextPath() );
      out.write("/resources/dist/js/demo.js\"></script>\n");
      out.write("\t<script\n");
      out.write("\t\tsrc=\"");
      out.print(request.getContextPath() );
      out.write("/resources/dist/js/pages/dashboard3.js\"></script>\n");
      out.write("\n");
      out.write("\t<!-- Summernote -->\n");
      out.write("\t<script\n");
      out.write("\t\tsrc=\"");
      out.print(request.getContextPath() );
      out.write("/resources/plugins/summernote/summernote-bs4.min.js\"></script>\n");
      out.write("\t<!-- Page Script -->\n");
      out.write("\n");
      out.write("\t<script>\n");
      out.write("\t\t/* $(function () {\n");
      out.write("\t\t   // Summernote\n");
      out.write("\t\t   $('.textarea').summernote()\n");
      out.write("\t\t })\n");
      out.write("\t\t */\n");
      out.write("\t\t$(document).ready(function() {\n");
      out.write("\t\t\t$('#compose-textarea').summernote({\n");
      out.write("\t\t\t\theight : 500, // set editor height\n");
      out.write("\t\t\t\tminHeight : null, // set minimum height of editor\n");
      out.write("\t\t\t\tmaxHeight : null, // set maximum height of editor\n");
      out.write("\t\t\t\tfocus : true\n");
      out.write("\t\t\t// set focus to editable area after initializing summernote\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\t</script>\n");
      out.write("\n");
      out.write("\t<script>\n");
      out.write("\t\t // 오늘 날짜 출력 \n");
      out.write("       \t/*  var today = new Date();\n");
      out.write("  \n");
      out.write("         var str = today.getFullYear() + \"-\"\n");
      out.write("             + (today.getMonth()+1) + \"-\"\n");
      out.write("             + today.getDate();\n");
      out.write("     \t $(\"#today\").html(str); */\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t// 유효성 검사\n");
      out.write("\t\tfunction validate(){\n");
      out.write("\t\t\tif( $(\"#inputTitle3\").val().trim().length == 0){\n");
      out.write("\t\t\t\talert(\"제목을 입력해 주세요.\");\n");
      out.write("\t\t\t\t$(\"#inputTitle3\").focus();\n");
      out.write("\t\t\t\treturn false;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif( $(\"#compose-textarea\").val().trim().length == 0){\n");
      out.write("\t\t\t\talert(\"내용을 입력해 주세요.\");\n");
      out.write("\t\t\t\t$(\"#compose-textarea\").focus();\n");
      out.write("\t\t\t\treturn false;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t</script>\n");
      out.write("\n");
      out.write("\t<!-- bs-custom-file-input -->\n");
      out.write("\t<script\n");
      out.write("\t\tsrc=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/bs-custom-file-input/bs-custom-file-input.min.js\"></script>\n");
      out.write("\t<script type=\"text/javascript\">\n");
      out.write("    $(document).ready(function () {\n");
      out.write("      bsCustomFileInput.init();\n");
      out.write("    });\n");
      out.write("  </script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
