/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2020-03-21 15:37:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.departmentBoard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class departmentBoardDetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction("fn:contains", org.apache.taglibs.standard.functions.Functions.class, "contains", new Class[] {java.lang.String.class, java.lang.String.class});
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1583419384000L));
    _jspx_dependants.put("jar:file:/C:/workspace/RealFinal/ojungFinal/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/workspace/RealFinal/ojungFinal/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>(주) 오정상사 그룹웨어 - 부서게시판 상세보기</title>\n");
      out.write("<!-- Tell the browser to be responsive to screen width -->\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("<!-- Font Awesome -->\n");
      out.write("\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("\thref=\"");
      out.print(request.getContextPath());
      out.write("/resources/plugins/fontawesome-free/css/all.min.css\">\n");
      out.write("<!-- Ionicons -->\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("\thref=\"https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css\">\n");
      out.write("<!-- Theme style -->\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("\thref=\"");
      out.print(request.getContextPath());
      out.write("/resources/dist/css/adminlte.min.css\">\n");
      out.write("<!-- Google Font: Source Sans Pro -->\n");
      out.write("<link\n");
      out.write("\thref=\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700\"\n");
      out.write("\trel=\"stylesheet\">\n");
      out.write("<!-- jQuery -->\n");
      out.write("<script\n");
      out.write("\tsrc=\"");
      out.print(request.getContextPath());
      out.write("/resources/plugins/jquery/jquery.min.js\"></script>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<style>\n");
      out.write(".form-control-sm {\n");
      out.write("\theight: calc(1.8125rem + 2px);\n");
      out.write("\tpadding: .25rem .5rem;\n");
      out.write("\tfont-size: .875rem;\n");
      out.write("\tline-height: 1.5;\n");
      out.write("\tborder-radius: .2rem;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".form-control {\n");
      out.write("\tdisplay: block;\n");
      out.write("\twidth: 95%;\n");
      out.write("\theight: calc(2.25rem + 2px);\n");
      out.write("\tpadding: .375rem .75rem;\n");
      out.write("\tfont-size: 1rem;\n");
      out.write("\tfont-weight: 400;\n");
      out.write("\tline-height: 1.5;\n");
      out.write("\tcolor: #495057;\n");
      out.write("\tbackground-color: #fff;\n");
      out.write("\tbackground-clip: padding-box;\n");
      out.write("\tborder: 1px solid #ced4da;\n");
      out.write("\tborder-radius: .25rem;\n");
      out.write("\tbox-shadow: inset 0 0 0 transparent;\n");
      out.write("\ttransition: border-color .15s ease-in-out, box-shadow .15s ease-in-out;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("<body class=\"hold-transition sidebar-mini\">\n");
      out.write("\t<div class=\"wrapper\">\n");
      out.write("\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/nav.jsp", out, false);
      out.write('\n');
      out.write('	');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/sidebar.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t<!-- Content Wrapper. Contains page content -->\n");
      out.write("\t\t<div class=\"content-wrapper\">\n");
      out.write("\t\t\t<!-- Content Header (Page header) -->\n");
      out.write("\t\t\t<section class=\"content-header\">\n");
      out.write("\t\t\t\t<div class=\"container-fluid\">\n");
      out.write("\t\t\t\t\t<div class=\"row mb-2\"></div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<!-- /.container-fluid -->\n");
      out.write("\t\t\t</section>\n");
      out.write("\n");
      out.write("\t\t\t<!-- Main content -->\n");
      out.write("\t\t\t<section class=\"content\">\n");
      out.write("\n");
      out.write("\t\t\t\t<!-- Default box -->\n");
      out.write("\t\t\t\t<div class=\"card card-outline\">\n");
      out.write("\t\t\t\t\t<div class=\"card-header bg-navy\">\n");
      out.write("\t\t\t\t\t\t<h3 class=\"card-title\">부서게시판 상세</h3>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<!-- /.card-header -->\n");
      out.write("\t\t\t\t\t<div class=\"card-header\" style=\"padding-bottom: 0px;\">\n");
      out.write("\t\t\t\t\t\t<h3 style=\"padding-bottom: 10px;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${deptBoard.boardTitle }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h3>\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t\t\t<h7>작성자 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${deptBoard.memberName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h7>\n");
      out.write("\t\t\t\t\t\t</p>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t\t\t\t<div class=\"card-body\"\n");
      out.write("\t\t\t\t\t\tstyle=\"padding-top: 10px; padding-bottom: 0px;\">\n");
      out.write("\t\t\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t\t\t작성일 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${deptBoard.createDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" <span class=\"float-right\">조회수:\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${deptBoard.boardCount }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\n");
      out.write("\t\t\t\t\t\t</p>\n");
      out.write("\t\t\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t\t\t첨부파일 :\n");
      out.write("\t\t\t\t\t\t\t");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t\t\t\t\t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t\t\t\t</p>\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t<br>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<hr style=\"margin: 0px;\">\n");
      out.write("\t\t\t\t\t<br>\n");
      out.write("\t\t\t\t\t<div class=\"card-body\" style=\"height: 500px;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${deptBoard.boardContent }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\n");
      out.write("\t\t\t\t\t<!-- /.card-body -->\n");
      out.write("\t\t\t\t\t<div class=\"card-footer\">\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t<!-- <a class=\"btn btn-danger btn-sm float-sm-right m-2\" href=\"#\">\n");
      out.write("                     <i class=\"fas fa-trash\"> </i> 삭제\n");
      out.write("                  </a> -->\n");
      out.write("\t\t\t\t\t\t<a class=\"btn btn-default btn-sm float-sm-right m-2\"\n");
      out.write("\t\t\t\t\t\t\thref=\"departmentBoardList\"> <i class=\"fas fa-share \"></i>\n");
      out.write("\t\t\t\t\t\t\t목록으로\n");
      out.write("\t\t\t\t\t\t</a>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<!-- /.card-footer-->\n");
      out.write("\t\t\t\t\t<!-- 댓글 영역 -->\n");
      out.write("\t\t\t</section>\n");
      out.write("\t\t\t<!-- /.content -->\n");
      out.write("\t\t\t<!-- Timelime example  -->\n");
      out.write("\t\t\t<div class=\"row\">\n");
      out.write("\t\t\t\t<div class=\"col-md-12\">\n");
      out.write("\t\t\t\t\t<!-- The time line -->\n");
      out.write("\t\t\t\t\t<span class=\"badge badge-secondary mb-5 ml-3\"\n");
      out.write("\t\t\t\t\t\tstyle=\"display: inline-block;\" id=\"replyCount\"></span>\n");
      out.write("\t\t\t\t\t<!-- 댓글 등록 +버튼 클릭시 작성영역 나타남 -->\n");
      out.write("\t\t\t\t\t<span id=\"messageArea\" class=\"timeline-item\"\n");
      out.write("\t\t\t\t\t\tstyle=\"text-align: center;\"></span>\n");
      out.write("\n");
      out.write("\t\t\t\t\t<div class=\"timeline\" id=\"timeline\">\n");
      out.write("\t\t\t\t\t\t<!-- timeline item -->\n");
      out.write("\t\t\t\t\t\t<!-- 작성된 댓글 영역 -->\n");
      out.write("\t\t\t\t\t\t<!-- 댓글 영역이 null이 아닐경우 반복하여 출력한다. -->\n");
      out.write("\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<!-- END timeline item -->\n");
      out.write("\n");
      out.write("\t\t\t\t\t<!-- 댓글 작성 영역 -->\n");
      out.write("\t\t\t\t\t<div class=\"timeline\">\n");
      out.write("\t\t\t\t\t\t<div id=\"replyInsert\">\n");
      out.write("\t\t\t\t\t\t\t<i class=\"fas fa-code bg-yellow\"></i>\n");
      out.write("\t\t\t\t\t\t\t<div class=\"timeline-item\">\n");
      out.write("\t\t\t\t\t\t\t\t<span class=\"time\" id=\"writeTime\"> </span>\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"timeline-header\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<textarea style=\"width: 100%; height: 100%\" id=\"replyContent\"></textarea>\n");
      out.write("\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"timeline-header\" style=\"height: 30px\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<a id=\"insertReply\"> <i class=\"fa fa-check float-right\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\tstyle=\"width: 50px\"></i>\n");
      out.write("\t\t\t\t\t\t\t\t\t</a> <a id=\"remove\"> <i class=\"fa fa-eraser float-right\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\tstyle=\"width: 50px\"></i>\n");
      out.write("\t\t\t\t\t\t\t\t\t</a>\n");
      out.write("\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t<!-- \t\t\t\t\t\t<div id='replyUpdate' style=\"display: none;\">\n");
      out.write("\t\t\t\t\t\t\t<i class='fas fa-code bg-yellow'></i>\n");
      out.write("\t\t\t\t\t\t\t<div class='timeline-item'>\n");
      out.write("\t\t\t\t\t\t\t\t<span class='time' id='writeTime'> </span>\n");
      out.write("\t\t\t\t\t\t\t\t<div class='timeline-header'>\n");
      out.write("\t\t\t\t\t\t\t\t\t<textarea style='width: 100%; height: 100%' id='updateContent'></textarea>\n");
      out.write("\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t<div class='timeline-header' style='height: 30px'>\n");
      out.write("\t\t\t\t\t\t\t\t\t<a id=updateReply> <i class='fa fa-check float-right'\n");
      out.write("\t\t\t\t\t\t\t\t\t\tstyle='width: 50px'></i>\n");
      out.write("\t\t\t\t\t\t\t\t\t</a> <a class='removeContent'> <i\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass='fa fa-arrow-left float-right' style='width: 50px'></i></a>\n");
      out.write("\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t</div> -->\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<div class=\"timeline-item\" style=\"height: 60px\">\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t<i class=\"fa fa-pen float-right pb-3 pt-3 pr-0\" id=\"plusReply\"\n");
      out.write("\t\t\t\t\t\t\tstyle=\"width: 50px;\"></i> <span><strong\n");
      out.write("\t\t\t\t\t\t\tclass=\"float-right pb-3 pt-3 pr-3\" id=\"plusReply\">댓글 등록</strong></span>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<!-- /.card -->\n");
      out.write("\t\t</div>\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\n");
      out.write("\t\t<!-- /.content-wrapper -->\n");
      out.write("\t\t<!-- ./wrapper -->\n");
      out.write("\n");
      out.write("\t\t<!-- REQUIRED SCRIPTS -->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t<!-- Bootstrap -->\n");
      out.write("\t\t<script\n");
      out.write("\t\t\tsrc=\"");
      out.print(request.getContextPath());
      out.write("/resources/plugins/bootstrap/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("\t\t<!-- AdminLTE -->\n");
      out.write("\t\t<script\n");
      out.write("\t\t\tsrc=\"");
      out.print(request.getContextPath());
      out.write("/resources/dist/js/adminlte.js\"></script>\n");
      out.write("\n");
      out.write("\t\t<!-- OPTIONAL SCRIPTS -->\n");
      out.write("\t\t<script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/dist/js/demo.js\"></script>\n");
      out.write("\t\t<script\n");
      out.write("\t\t\tsrc=\"");
      out.print(request.getContextPath());
      out.write("/resources/dist/js/pages/dashboard3.js\"></script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t<script>\n");
      out.write("\t\t\t$(\"#deleteBtn\").on(\"click\", function() {\n");
      out.write("\t\t\t\tif (confirm(\"정말 삭제 하시겠습니까?\"))\n");
      out.write("\t\t\t\t\tlocation.href = \"delete?no=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${deptBoard.boardNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\n");
      out.write("\t\t\t});\n");
      out.write("\n");
      out.write("\t\t\t$(function(){\n");
      out.write("\t\t\t\t$(\"#replyInsert\").hide();\n");
      out.write("\t\t\t\treplyList();\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\treplyCount();\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(\"#plusReply\").on(\"click\",function(){\n");
      out.write("\t\t\t\tinsert();\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tfunction insert(){\n");
      out.write("\t\t\t\t$(\"#replyInsert\").toggle();\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t$(\"#insertReply\").on(\"click\",function(){\n");
      out.write("\t\t\tvar replyContent = $(\"#replyContent\").val();\n");
      out.write("\t\t\tvar boardNo = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${deptBoard.boardNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\n");
      out.write("\t\t\tvar memberNo = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\n");
      out.write("\t\t\tvar obj={\"replyContent\":replyContent,\"boardNo\":boardNo, \"memberNo\":memberNo}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t//console.log(obj)\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember == null}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("){\n");
      out.write("\t\t\t\talert(\"로그인 후 이용 해주세요.\");\n");
      out.write("\t\t\t}else{\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\t $.ajax({\n");
      out.write("\t\t\t        type:'POST',\n");
      out.write("\t\t\t        url : \"insertReply\",\n");
      out.write("\t\t\t        data:JSON.stringify(obj),\n");
      out.write("\t\t\t      \tcontentType: \"application/json\",\n");
      out.write("\t\t\t        success : function(data){\n");
      out.write("\t\t\t            if(data==\"success\") {\n");
      out.write("\t\t\t  \t\t\t//console.log(data);\n");
      out.write("\t\t\t  \t\t\talert(\"댓글이 등록되었습니다.\");\n");
      out.write("\t\t\t  \t\t\t$(\"#timeline\").show();\n");
      out.write("\t\t\t            $(\"#replyInsert\").hide();\n");
      out.write("\t\t\t            $(\"#replyContent\").val(\"\");\n");
      out.write("\t\t\t            replyList();\n");
      out.write("\t\t\t            replyCount();\n");
      out.write("\t\t\t            }else{\n");
      out.write("\t\t\t            \talert(\"댓글 등록이 실패되었습니다.\");\n");
      out.write("\t\t\t            }\n");
      out.write("\t\t\t        },\n");
      out.write("\t\t\t        error:function(){\n");
      out.write("\t\t\t            //alert(\"code:\"+request.status+\"\\n\"+\"message:\"+request.responseText+\"\\n\"+\"error:\"+error);\n");
      out.write("\t\t\t            console.log(\"실패\");\n");
      out.write("\t\t\t       }\n");
      out.write("\t\t\t        \n");
      out.write("\t\t\t    });\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\tfunction replyCount(){\n");
      out.write("\t\t\tvar boardNo = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${deptBoard.boardNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl : \"replyCount\",\n");
      out.write("\t\t\t\ttype : \"POST\",\n");
      out.write("\t\t\t\tdata : {\"boardNo\" : boardNo},\n");
      out.write("\t\t\t\tdataType : \"json\", \n");
      out.write("\t\t\t\tsuccess : function(count){\n");
      out.write("\t\t\t\t\t\tconsole.log(\"댓글 수 조회 성공\");\n");
      out.write("\t\t\t\t\tif(count>0){\n");
      out.write("\t\t\t\t\t\tconsole.log(\"조회된 댓글 수 : \" + count);\n");
      out.write("\t\t\t\t\t\tvar msg = \"총 댓글 수 : \" + count;\n");
      out.write("\t\t\t\t\t}else{\n");
      out.write("\t\t\t\t\t\tconsole.log(\"댓글 수 조회 실패\");\n");
      out.write("\t\t\t\t\t\tcount = 0;\n");
      out.write("\t\t\t\t\t\tvar msg = \"총 댓글 수 : \" + count;\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t$(\"#replyCount\").html(msg);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\t\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t//var replyNo = \"\";\n");
      out.write("\t\t// 댓글 목록 출력\n");
      out.write("\t\tfunction replyList(){\n");
      out.write("\t\t\tvar boardNo = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${deptBoard.boardNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl : \"replyList\",\n");
      out.write("\t\t\t\ttype : \"POST\",\n");
      out.write("\t\t\t\tdata : {\"boardNo\" : boardNo},\n");
      out.write("\t\t\t\tdataType : \"json\", \n");
      out.write("\t\t\t\tsuccess : function(replyList){\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tvar $messageArea = $(\"#messageArea\");\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t// 등록된 댓글이 없는 경우 \n");
      out.write("\t\t\t\t\tif(replyList == \"\" ){ \n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t$messageArea.html(\"등록된 댓글이 없습니다.\");\n");
      out.write("\t\t\t\t\t\t$(\"#timeline\").hide();\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t}else{\n");
      out.write("\t\t\t\t\t\t// 댓글 등록 성공하고, 등록된 댓글이 있는 경우\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t$messageArea.html(\"\"); // 기존 댓글 목록 삭제\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\tvar html = \"\";\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\tfor(i=0; i<replyList.length; i++){\n");
      out.write("\t\t\t\t\t\t\tvar memberNo = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\n");
      out.write("\t\t\t\t\t\t\tvar writeNo = replyList[i].memberNo;\n");
      out.write("\t\t\t\t\t\t\tvar replyNo = replyList[i].replyNo;\n");
      out.write("\t\t\t\t\t\t\t//console.log(i + \"번째 댓글번호 : \" + replyNo);\n");
      out.write("\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t html += \"<div id='replyList' class='replyList'><i class='fas fa-user bg-green'></i> <div class='timeline-item'><span class='time'><i class='fas fa-clock' id='writeTime'></i>\";\n");
      out.write("\t\t                     html += replyList[i].modifyDate + \"</span>\";\n");
      out.write("\t\t                     html += \"<h3 class='timeline-header'><a id='memberName'>\";\n");
      out.write("\t\t                     html += replyList[i].memberName + \"</a>\";\n");
      out.write("\t\t                     html += \"</h3><div class='card-body' id='content'>\";\n");
      out.write("\t\t                     html += replyList[i].replyContent;\n");
      out.write("\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\tif (memberNo == writeNo){ // 작성자와 로그인멤버가 같은경우만 수정/삭제버튼 보임\n");
      out.write("\t\t\t\t\t\t\t\thtml += \"<span><i class='fa fa-trash float-right' id='replyDelete' ></i>\";\n");
      out.write("\t\t\t\t\t\t\t\thtml += \"<i class='fa fa-edit float-right editForm mr-4' id='replyEdit' ></i>\";\n");
      out.write("\t\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t\thtml += \"</div>\";//content\n");
      out.write("\t\t\t\t\t\t\thtml += \"<div style='display:none' >\"+ replyNo + \"</div>\";\n");
      out.write("\t\t\t\t\t\t\thtml +=\"</div></div>\";\n");
      out.write("\t\t\t\t\t\t\thtml +=\"</div>\";//replyList\n");
      out.write("\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t}; // for\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t$(\"#timeline\").html(html);\n");
      out.write("\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t}//else\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t}, \n");
      out.write("\t\t\t\terror : function(){\n");
      out.write("\t\t\t\t\tconsole.log(\"댓글 목록 조회 ajax 호출 실패\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\n");
      out.write("\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\n");
      out.write("\t\t}//replyList()\n");
      out.write("\t\t\n");
      out.write("\t\t\t$(document).on(\"click\", \"#replyDelete\", function (){\n");
      out.write("\t\t\t\t// 댓글 삭제 버튼 클릭시 컨펌창 띄우기\n");
      out.write("\t\t\t\treplyNo =  $(this).parent().parent().next().text();\n");
      out.write("\t\t\t\t//console.log(\"삭제버튼 클릭했음\");\n");
      out.write("\t\t\t\tconsole.log(\"삭제 버튼 클릭시 전달받은 댓번호 : \" + replyNo);\n");
      out.write("\t\t\t\tvar msg = confirm(\"댓글을 삭제하시겠습니까?\");\n");
      out.write("\t\t\t\tif (msg == true){\n");
      out.write("\t\t\t\t\t replyDelete();\n");
      out.write("\t\t\t\t}else{\n");
      out.write("\t\t\t\t\treturn false;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\n");
      out.write("\t\t      function replyDelete(){\n");
      out.write("\t\t          \n");
      out.write("\t\t          $.ajax({\n");
      out.write("\t\t                 type:'POST',\n");
      out.write("\t\t                 url : \"deleteReply\",\n");
      out.write("\t\t                 data:{\"replyNo\":replyNo},\n");
      out.write("\t\t                 dataType : \"json\",\n");
      out.write("\t\t                 success : function(result){\n");
      out.write("\t\t                     if(result>0) {\n");
      out.write("\t\t                    //console.log(data);\n");
      out.write("\t\t                    alert(\"댓글이 삭제되었습니다.\");\n");
      out.write("\t\t                     replyList();\n");
      out.write("\t\t                     replyCount();\n");
      out.write("\t\t                     console.log(\"댓삭성공\")\n");
      out.write("\t\t                     }else{\n");
      out.write("\t\t                        alert(\"댓글 삭제가 실패되었습니다.\");\n");
      out.write("\t\t                     }\n");
      out.write("\t\t                 },\n");
      out.write("\t\t                 error:function(){\n");
      out.write("\t\t                     console.log(\"실패\");\n");
      out.write("\t\t                }\n");
      out.write("\t\t                 \n");
      out.write("\t\t             }); \n");
      out.write("\t\t      }\n");
      out.write("\n");
      out.write("\t\t      \n");
      out.write("\t\t\t\t// 수정 폼 가져오기 \n");
      out.write("\t\t\t\tvar preContent=\"\";\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t$(document).on(\"click\",\".editForm\",function(){\n");
      out.write("\t\t\t\t\t// 수정폼 안에 이전 댓글 내용 삽입.\n");
      out.write("\t\t\t\t\tvar str =($(this).parent().parent().text());\n");
      out.write("\t\t\t\t\tpreContent = str;\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tvar $amond = $(\"<textarea>\").css(\"resize\",\"none\");\n");
      out.write("\t\t\t\t\t$amond.text(preContent).css(\"width\",\"100%\");\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\treplyNo =  $(this).parent().parent().next().text();\n");
      out.write("\t\t\t\t\tconsole.log(\"수정폼에서 읽혀진 댓글 번호 : \" + replyNo)\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t// 댓글 수정 완료하기 / 지우기 버튼\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tvar $rDiv = $(\"<span>\");\n");
      out.write("\t\t\t\t\tvar $die = $(\"<i>\");\n");
      out.write("\t\t\t\t\tvar $honey = $(\"<i>\");\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t$die.prop({\"class\":\"fa fa-check replySave float-right replySave\"});\n");
      out.write("\t\t\t\t\t$honey.prop({\"class\":\"fa fa-eraser removeContent float-right mr-4\"});\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t$(this).parent().parent().html($amond).append($rDiv,$die,$honey);\n");
      out.write("\t\t\t\t\t//console.log($amond.val());\n");
      out.write("\t\t\t\t\tconsole.log(\"수정폼 불러올 때 보여지는 이전 댓글 내용 : \" + preContent);\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t\t$(\".removeContent\").on(\"click\",function(){\n");
      out.write("\t\t\t\t\t\tvar html=\"\";\n");
      out.write("\t\t\t            html += \"<div>\";\n");
      out.write("\t\t\t            html += preContent;\n");
      out.write("\t\t\t\t\t\thtml += \"<span><i class='fa fa-trash float-right' id='replyDelete' ></i>\";\n");
      out.write("\t\t\t\t\t\thtml += \"<i class='fa fa-edit float-right editForm mr-4' id='replyEdit' ></i></div>\";\n");
      out.write("\t\t\t\t\t\thtml += \"<div style='display:none' >\"+ replyNo + \"</div>\";\n");
      out.write("\t\t\t\t\t\t$(this).parent().html(html);\n");
      out.write("\t\t\t\t\t\t//replyNo = $(this).parent().parent().next().text();\n");
      out.write("\t\t\t\t\t\tconsole.log(\"removeContent 클릭시 replyNo : \" + replyNo);\n");
      out.write("\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t $(\".replySave\").on(\"click\", function(){\n");
      out.write("\t\t\t\t    \t  replyContent = $(this).parent().children().val();\n");
      out.write("\t\t\t\t    \t  console.log(\"수정버튼 완료 클릭시 replyNo : \" + $(this).parent().parent().next().text());\n");
      out.write("\t\t\t\t    \t  console.log(\"수정버튼 완료 클릭시 전달된 댓글번호 :\" + replyNo);\n");
      out.write("\t\t\t\t    \t  console.log(\"수정버튼 완료 클릭시 전달된 내용 : \" + replyContent);\n");
      out.write("\t\t\t\t    \t  \n");
      out.write("\t\t\t\t    \t  var obj ={\"replyNo\":replyNo, \"replyContent\":replyContent};\n");
      out.write("\t\t\t\t    \t  \n");
      out.write("\t\t\t\t\t\t\t $.ajax({\n");
      out.write("\t\t\t\t\t\t\t        type:'POST',\n");
      out.write("\t\t\t\t\t\t\t        url : \"updateReply\",\n");
      out.write("\t\t\t\t\t\t\t        data:JSON.stringify(obj),\n");
      out.write("\t\t\t\t\t\t\t        dataType : \"json\",\n");
      out.write("\t\t\t\t\t\t\t      \tcontentType: \"application/json\",\n");
      out.write("\t\t\t\t\t\t\t        success : function(result){\n");
      out.write("\t\t\t\t\t\t\t            if(result>0) {\n");
      out.write("\t\t\t\t\t\t\t  \t\t\t//console.log(data);\n");
      out.write("\t\t\t\t\t\t\t  \t\t\talert(\"댓글이 수정 되었습니다.\");\n");
      out.write("\t\t\t\t\t\t\t  \t\t\t$(\"#timeline\").show();\n");
      out.write("\t\t\t\t\t\t\t            $(\"#replyInsert\").hide();\n");
      out.write("\t\t\t\t\t\t\t            $(\"#replyUpdate\").hide();\n");
      out.write("\t\t\t\t\t\t\t            $(\"#replyContent\").val(\"\");\n");
      out.write("\t\t\t\t\t\t\t            replyList();\n");
      out.write("\t\t\t\t\t\t\t            replyCount();\n");
      out.write("\t\t\t\t\t\t\t            }else{\n");
      out.write("\t\t\t\t\t\t\t            \talert(\"댓글 수정 실패되었습니다.\");\n");
      out.write("\t\t\t\t\t\t\t            }\n");
      out.write("\t\t\t\t\t\t\t        },\n");
      out.write("\t\t\t\t\t\t\t        error:function(){\n");
      out.write("\t\t\t\t\t\t\t            //alert(\"code:\"+request.status+\"\\n\"+\"message:\"+request.responseText+\"\\n\"+\"error:\"+error);\n");
      out.write("\t\t\t\t\t\t\t            console.log(\"수정 실패\");\n");
      out.write("\t\t\t\t\t\t\t       }\n");
      out.write("\t\t\t\t\t\t\t        \n");
      out.write("\t\t\t\t\t\t\t    });\n");
      out.write("\t\t\t\t      });\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t$(document).on(\"click\",\"#remove\",function(){\n");
      out.write("\t\t\t// 인서트 동작에서 리무브(지우개 아이콘) 클릭시.\n");
      out.write("\t\t\t$(\"#replyContent\").val(\"\");\n");
      out.write("\t\t\t$(\"#replyInsert\").hide();\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t/*\n");
      out.write("\t\t\n");
      out.write("\t\tfunction replyUpdate(no,content){\n");
      out.write("\t\t\tvar replyNo = no;\n");
      out.write("\t\t\tvar replyContent = content;\n");
      out.write("\t\t\tconsole.log(\"수정할 댓글 번호 : \" + no);\n");
      out.write("\t\t\tconsole.log(\"수정할 내용 : \" + content);\n");
      out.write("\t\t\tvar obj = {\"replyNo\":replyNo,\"replyContent\":replyContent}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember == null}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("){\n");
      out.write("\t\t\t\talert(\"로그인 후 이용 해주세요.\");\n");
      out.write("\t\t\t}else{\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\t $.ajax({\n");
      out.write("\t\t\t        type:'POST',\n");
      out.write("\t\t\t        url : \"updateReply\",\n");
      out.write("\t\t\t        data:JSON.stringify(obj),\n");
      out.write("\t\t\t        dataType : \"json\",\n");
      out.write("\t\t\t      \tcontentType: \"application/json\",\n");
      out.write("\t\t\t        success : function(result){\n");
      out.write("\t\t\t            if(result>0) {\n");
      out.write("\t\t\t  \t\t\t//console.log(data);\n");
      out.write("\t\t\t  \t\t\talert(\"댓글이 수정 되었습니다.\");\n");
      out.write("\t\t\t  \t\t\t$(\"#timeline\").show();\n");
      out.write("\t\t\t            $(\"#replyInsert\").hide();\n");
      out.write("\t\t\t            $(\"#replyUpdate\").hide();\n");
      out.write("\t\t\t            $(\"#replyContent\").val(\"\");\n");
      out.write("\t\t\t            replyList();\n");
      out.write("\t\t\t            replyCount();\n");
      out.write("\t\t\t            }else{\n");
      out.write("\t\t\t            \talert(\"댓글 수정 실패되었습니다.\");\n");
      out.write("\t\t\t            }\n");
      out.write("\t\t\t        },\n");
      out.write("\t\t\t        error:function(){\n");
      out.write("\t\t\t            //alert(\"code:\"+request.status+\"\\n\"+\"message:\"+request.responseText+\"\\n\"+\"error:\"+error);\n");
      out.write("\t\t\t            console.log(\"수정 실패\");\n");
      out.write("\t\t\t       }\n");
      out.write("\t\t\t        \n");
      out.write("\t\t\t    });\n");
      out.write("\t\t\t\t \n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t*/\n");
      out.write("\t\t\t\n");
      out.write("\n");
      out.write("\t\t\n");
      out.write("//\t\t$(document).on(\"click\",\".removeContent\",function(){\n");
      out.write("\t\t\t// 수정폼에서 지우개 클릭하면 이전 내용 다시 보임.\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t//var $butter = $(\"<span>\").text(preContent);\n");
      out.write("//\t\t\tconsole.log(\"removeContent클릭시 preContent : \" + preContent);\n");
      out.write("//\t\t\tconsole.log(\"removeContent클릭시 replyNo : \" + replyNo);\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t//var $die = $(\"<i>\");\n");
      out.write("\t\t\t//var $honey = $(\"<i>\");\n");
      out.write("\t\t\t//$die.prop({\"class\":\"fa fa-trash float-right deleteReply \"});\n");
      out.write("\t\t\t//$honey.prop({\"class\":\"fa fa-edit float-right editForm mr-4\"});\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t//$butter.append($die).append($honey);\n");
      out.write("\t\t\t//console.log('버터' + preContent);\n");
      out.write("\t\t\t//$(this).parent().html($butter).append($die, $honey);\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\n");
      out.write("//\t\t\tvar html=\"\";\n");
      out.write("//            html += \"<div>\";\n");
      out.write("//            html += preContent;\n");
      out.write("//\t\t\thtml += \"<span><i class='fa fa-trash float-right' id='replyDelete' ></i>\";\n");
      out.write("//\t\t\thtml += \"<i class='fa fa-edit float-right editForm mr-4' id='replyEdit' ></i>\";\n");
      out.write("//\t\t\thtml += \"<div style='display:none' >\"+ replyNo + \"</div></div>\";\n");
      out.write("//\t\t\t$(this).parent().html(html);\n");
      out.write("//\t\t\treplyNo = $(this).parent().parent().next();\n");
      out.write("\t\t\t\n");
      out.write("//\t\t});\n");
      out.write("\t\t\n");
      out.write("\n");
      out.write("\t     /* \n");
      out.write("\t      $(document).on(\"click\", \".replySave\", function(){\n");
      out.write("\t    \t  replyContent = $(this).parent().children().val();\n");
      out.write("\t    \t  console.log(\"asdfasdf\" + $(this).parent().parent().next().text());\n");
      out.write("\t    \t  console.log(\"수정버튼 완료 클릭시 전달된 댓글번호 :\" + replyNo);\n");
      out.write("\t    \t  console.log(\"수정버튼 완료 클릭시 전달된 내용 : \" + replyContent);\n");
      out.write("\t    \t  \n");
      out.write("\t    \t  var obj ={\"replyNo\":replyNo, \"replyContent\":replyContent};\n");
      out.write("\t    \t  \n");
      out.write("\t\t\t\t $.ajax({\n");
      out.write("\t\t\t\t        type:'POST',\n");
      out.write("\t\t\t\t        url : \"updateReply\",\n");
      out.write("\t\t\t\t        data:JSON.stringify(obj),\n");
      out.write("\t\t\t\t        dataType : \"json\",\n");
      out.write("\t\t\t\t      \tcontentType: \"application/json\",\n");
      out.write("\t\t\t\t        success : function(result){\n");
      out.write("\t\t\t\t            if(result>0) {\n");
      out.write("\t\t\t\t  \t\t\t//console.log(data);\n");
      out.write("\t\t\t\t  \t\t\talert(\"댓글이 수정 되었습니다.\");\n");
      out.write("\t\t\t\t  \t\t\t$(\"#timeline\").show();\n");
      out.write("\t\t\t\t            $(\"#replyInsert\").hide();\n");
      out.write("\t\t\t\t            $(\"#replyUpdate\").hide();\n");
      out.write("\t\t\t\t            $(\"#replyContent\").val(\"\");\n");
      out.write("\t\t\t\t            replyList();\n");
      out.write("\t\t\t\t            replyCount();\n");
      out.write("\t\t\t\t            }else{\n");
      out.write("\t\t\t\t            \talert(\"댓글 수정 실패되었습니다.\");\n");
      out.write("\t\t\t\t            }\n");
      out.write("\t\t\t\t        },\n");
      out.write("\t\t\t\t        error:function(){\n");
      out.write("\t\t\t\t            //alert(\"code:\"+request.status+\"\\n\"+\"message:\"+request.responseText+\"\\n\"+\"error:\"+error);\n");
      out.write("\t\t\t\t            console.log(\"수정 실패\");\n");
      out.write("\t\t\t\t       }\n");
      out.write("\t\t\t\t        \n");
      out.write("\t\t\t\t    });\n");
      out.write("\t      });\n");
      out.write("\t      \n");
      out.write("\t      */\n");
      out.write("\t\t\n");
      out.write("\t</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/departmentBoard/departmentBoardDetail.jsp(108,7) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty files}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t\t\t\t\t\t\t등록된 파일이 없습니다.\n");
          out.write("\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/departmentBoard/departmentBoardDetail.jsp(111,7) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("files");
      // /WEB-INF/views/departmentBoard/departmentBoardDetail.jsp(111,7) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/departmentBoard/departmentBoardDetail.jsp(111,7) '${files}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${files}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("\t\t\t\t\t\t\t\t");
            if (_jspx_meth_c_005fif_005f1(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\n");
            out.write("\t\t\t\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /WEB-INF/views/departmentBoard/departmentBoardDetail.jsp(112,8) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${files.fileOriginName  != '' || files.fileOriginName ne null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t");
          if (_jspx_meth_c_005fset_005f0(_jspx_th_c_005fif_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\n");
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t<a\n");
          out.write("\t\t\t\t\t\t\t\t\t\thref=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/resources/uploadFiles/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${files.fileChangeName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"\n");
          out.write("\t\t\t\t\t\t\t\t\t\tclass=\"btn-link text-secondary\" download> ");
          if (_jspx_meth_c_005fchoose_005f0(_jspx_th_c_005fif_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write(' ');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${files.fileOriginName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t</a> &nbsp;\n");
          out.write("\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
      // /WEB-INF/views/departmentBoard/departmentBoardDetail.jsp(114,9) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("formatString");
      // /WEB-INF/views/departmentBoard/departmentBoardDetail.jsp(114,9) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/departmentBoard/departmentBoardDetail.jsp(114,9) '${files.fileOriginName }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${files.fileOriginName }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\n");
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t");
          if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\n");
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t");
          if (_jspx_meth_c_005fwhen_005f2(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\n");
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t");
          if (_jspx_meth_c_005fwhen_005f3(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\n");
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/departmentBoard/departmentBoardDetail.jsp(119,11) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:contains(formatString,'png')}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"far fa-fw fa-image \"></i>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f1_reused = false;
    try {
      _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/departmentBoard/departmentBoardDetail.jsp(123,11) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:contains(formatString,'docx')}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0)).booleanValue());
      int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
      if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"far fa-fw fa-file-word\"></i>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
      _jspx_th_c_005fwhen_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f2 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f2_reused = false;
    try {
      _jspx_th_c_005fwhen_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/departmentBoard/departmentBoardDetail.jsp(127,11) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:contains(formatString,'pdf')}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0)).booleanValue());
      int _jspx_eval_c_005fwhen_005f2 = _jspx_th_c_005fwhen_005f2.doStartTag();
      if (_jspx_eval_c_005fwhen_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"far fa-fw fa-file-pdf\"></i>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f2);
      _jspx_th_c_005fwhen_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f3 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f3_reused = false;
    try {
      _jspx_th_c_005fwhen_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/departmentBoard/departmentBoardDetail.jsp(131,11) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:contains(formatString,'mln')}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0)).booleanValue());
      int _jspx_eval_c_005fwhen_005f3 = _jspx_th_c_005fwhen_005f3.doStartTag();
      if (_jspx_eval_c_005fwhen_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"far fa-fw fa-envelope\"></i>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f3);
      _jspx_th_c_005fwhen_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"far fa-fw fa-file\"></i>\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /WEB-INF/views/departmentBoard/departmentBoardDetail.jsp(152,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember != null && deptBoard.memberNo == loginMember.memberNo}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t\t\t\t\t\t\t<button class=\"btn btn-danger btn-sm float-sm-right m-2\"\n");
          out.write("\t\t\t\t\t\t\t\tid=\"deleteBtn\">\n");
          out.write("\t\t\t\t\t\t\t\t<i class=\"fas fa-trash\"> </i> 삭제\n");
          out.write("\t\t\t\t\t\t\t</button>\n");
          out.write("\t\t\t\t\t\t\t<a class=\"btn btn-info btn-sm float-sm-right m-2\"\n");
          out.write("\t\t\t\t\t\t\t\thref=\"updateForm?no=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${deptBoard.boardNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"> <i\n");
          out.write("\t\t\t\t\t\t\t\tclass=\"fas fa-pencil-alt \"> </i> 수정\n");
          out.write("\t\t\t\t\t\t\t</a>\n");
          out.write("\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }
}
