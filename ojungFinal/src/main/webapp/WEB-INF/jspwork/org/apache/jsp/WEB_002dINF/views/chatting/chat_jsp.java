/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2020-03-30 12:33:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.chatting;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class chat_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1583419384000L));
    _jspx_dependants.put("jar:file:/C:/Users/user/git/example/ojungFinal/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/Users/user/git/example/ojungFinal/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ko\">\n");
      out.write("<head>\n");
      out.write("<meta charset=\"utf-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("<meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n");
      out.write("<title>(주) 오정상사 그룹웨어 - 채팅</title>\n");
      out.write("<!-- jQuery -->\n");
      out.write("   <script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/plugins/jquery/jquery.min.js\"></script>\n");
      out.write("\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\n");
      out.write("<!-- Tell the browser to be responsive to screen width -->\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("<!-- Font Awesome -->\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("   href=\"");
      out.print(request.getContextPath());
      out.write("/resources/plugins/fontawesome-free/css/all.min.css\">\n");
      out.write("<!-- Ionicons -->\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("   href=\"https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css\">\n");
      out.write("<!-- Theme style -->\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("   href=\"");
      out.print(request.getContextPath());
      out.write("/resources/dist/css/adminlte.min.css\">\n");
      out.write("<!-- Google Font: Source Sans Pro -->\n");
      out.write("<link\n");
      out.write("   href=\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700\"\n");
      out.write("   rel=\"stylesheet\">\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("\t\n");
      out.write(" <style>\n");
      out.write(" .direct-chat-text{\n");
      out.write(" \tposition: absolute;\n");
      out.write(" }\n");
      out.write(" .right-txt{\n");
      out.write(" \t    right: 2%;\n");
      out.write(" }\n");
      out.write(" .left-txt{\n");
      out.write(" \t    left: 2%;\n");
      out.write(" }\n");
      out.write("    .direct-chat-primary .right>.direct-chat-text::after,\n");
      out.write("    .direct-chat-primary .right>.direct-chat-text::before {\n");
      out.write("      border-left-color: rgb(52, 58, 64);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .direct-chat-primary .right>.direct-chat-text {\n");
      out.write("      background: rgb(52, 58, 64);\n");
      out.write("      border-color: rgb(52, 58, 64);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .bg-primary {\n");
      out.write("      background-color: rgb(255, 0, 0) !important;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .bg-primary-top {\n");
      out.write("      background-color: rgb(52, 58, 64) !important;\n");
      out.write("      color: white;\n");
      out.write("      font-size: 13px;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .btn-primary {\n");
      out.write("      color: #fff;\n");
      out.write("      background-color: rgb(52, 58, 64);\n");
      out.write("      border-color: rgb(52, 58, 64);\n");
      out.write("      box-shadow: none;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .btn-primary:hover {\n");
      out.write("      color: #fff;\n");
      out.write("      background-color: black;\n");
      out.write("      border-color: black;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .btn-primary:not(:disabled):not(.disabled).active,\n");
      out.write("    .btn-primary:not(:disabled):not(.disabled):active,\n");
      out.write("    .show>.btn-primary.dropdown-toggle {\n");
      out.write("      color: #fff;\n");
      out.write("      background-color: black;\n");
      out.write("      border-color: black;\n");
      out.write("    }\n");
      out.write("    .info-box {\n");
      out.write("      background-color: #001f3f !important;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .info-box::-webkit-scrollbar{width: 16px;}\n");
      out.write("      .info-box::-webkit-scrollbar-track {background-color: #001f3f;}\n");
      out.write("      .info-box::-webkit-scrollbar-thumb {background-color:rgb(24, 27, 29)}\n");
      out.write("      .info-box::-webkit-scrollbar-thumb:hover {background: rgb(52, 58, 64)}\n");
      out.write("      .info-box::-webkit-scrollbar-button:start:decrement,::-webkit-scrollbar-button:end:increment {\n");
      out.write("      width:16px;height:16px;background:#001f3f;} \n");
      out.write("\n");
      out.write("  </style>\n");
      out.write("\n");
      out.write("\n");
      out.write("<body class=\"hold-transition sidebar-mini\">\n");
      out.write("   <div class=\"wrapper\">\n");
      out.write("\n");
      out.write("      ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/nav.jsp", out, false);
      out.write("\n");
      out.write("      ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/sidebar.jsp", out, false);
      out.write("\n");
      out.write("      <input type=\"hidden\" id=\"userEmail\"\n");
      out.write("         value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberEmail }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("      <!-- 유저이메일 -->\n");
      out.write("      <input type=\"hidden\" id=\"userName\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("      <!-- 유저이름 -->\n");
      out.write("      <input type=\"hidden\" id=\"room\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${room }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("      <!-- 현재 유저가 접속한 방이름 -->\n");
      out.write("\n");
      out.write("      <!-- Content Wrapper. Contains page content -->\n");
      out.write("      <div class=\"content-wrapper\">\n");
      out.write("         <!-- Content Header (Page header) -->\n");
      out.write("         <div class=\"content-header\">\n");
      out.write("            <div class=\"container-fluid\">\n");
      out.write("               <div class=\"row mb-2\"></div>\n");
      out.write("               <!-- /.row -->\n");
      out.write("            </div>\n");
      out.write("            <!-- /.container-fluid -->\n");
      out.write("         </div>\n");
      out.write("         <!-- /.content-header -->\n");
      out.write("\n");
      out.write("         \n");
      out.write("\n");
      out.write("         \n");
      out.write("         <!-- 인원수 증가, 감소 버튼 클릭시, 실행되는 스크립트 -->\n");
      out.write("         <script type=\"text/javascript\">\n");
      out.write("            function count_back() {\n");
      out.write("               var count = $(\"#count\").val();\n");
      out.write("               count = (Number(count) - 1);\n");
      out.write("               if (count >= 2) {\n");
      out.write("                  $(\"#count\").val(count);\n");
      out.write("               }\n");
      out.write("            };\n");
      out.write("            function count_next() {\n");
      out.write("               var count = $(\"#count\").val();\n");
      out.write("               count = (Number(count) + 1);\n");
      out.write("               if ($(\"#count\").val() < 30) {\n");
      out.write("                  $(\"#count\").val(count);\n");
      out.write("               }\n");
      out.write("            };\n");
      out.write("         </script>\n");
      out.write("\n");
      out.write("         <!-- 접속자 명단에서 아이디 클릭 시 귓속말에 바로 세팅 -->\n");
      out.write("         <script type=\"text/javascript\">\n");
      out.write("            function insertWisper(id) {\n");
      out.write("               if ($(\"#userName\").val() == id) {\n");
      out.write("                  alert(\"본인에게는 귓속말을 할 수 없습니다.\");\n");
      out.write("               } else {\n");
      out.write("                  $(\"#wisper\").val(id);\n");
      out.write("               }\n");
      out.write("\n");
      out.write("            }\n");
      out.write("         </script>\n");
      out.write("\n");
      out.write("         <script type=\"text/javascript\">\n");
      out.write("            $(\"#wisper\").click(function() {\n");
      out.write("               $(\"#wisper\").val(\"\");\n");
      out.write("            });\n");
      out.write("         </script>\n");
      out.write("\n");
      out.write("\n");
      out.write("         <!-- Main content -->\n");
      out.write("         <div class=\"content\">\n");
      out.write("            <div class=\"container-fluid\" style=\"padding-left: 60px;\">\n");
      out.write("               <!-- Direct Chat -->\n");
      out.write("               <div class=\"row\">\n");
      out.write("                  <div class=\"col-md-10\">\n");
      out.write("                     <!-- DIRECT CHAT PRIMARY -->\n");
      out.write("                     <div\n");
      out.write("                        class=\"card card-prirary cardutline direct-chat direct-chat-primary\"\n");
      out.write("                        style=\"height: 800px;\">\n");
      out.write("                        <div class=\"card-header bg-navy\">\n");
      out.write("                           <h3 class=\"card-title\" id=\"curroomName\">\n");
      out.write("                              ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("                              ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\n");
      out.write("                           </h3>\n");
      out.write("\n");
      out.write("                           <div class=\"card-tools\">\n");
      out.write("                              <span data-toggle=\"tooltip\" title=\"New Messages\"\n");
      out.write("                                 class=\"badge bg-primary\">3</span>\n");
      out.write("                              <button type=\"button\" class=\"btn btn-tool\"\n");
      out.write("                                 data-card-widget=\"collapse\">\n");
      out.write("                                 <i class=\"fas fa-minus\"></i>\n");
      out.write("                              </button>\n");
      out.write("                              <button type=\"button\" class=\"btn btn-tool\"\n");
      out.write("                                 data-toggle=\"tooltip\" title=\"Contacts\"\n");
      out.write("                                 data-widget=\"chat-pane-toggle\">\n");
      out.write("                                 <i class=\"fas fa-comments\"></i>\n");
      out.write("                              </button>\n");
      out.write("                              <button type=\"button\" class=\"btn btn-tool\"\n");
      out.write("                                 data-card-widget=\"remove\">\n");
      out.write("                                 <i class=\"fas fa-times\"></i>\n");
      out.write("                              </button>\n");
      out.write("                           </div>\n");
      out.write("                        </div>\n");
      out.write("                        <!-- /.card-header -->\n");
      out.write("                        <div class=\"card-body\">\n");
      out.write("                           <!-- Conversations are loaded here -->\n");
      out.write("                           <div class=\"direct-chat-messages\" style=\"height: 680px ; width:95%; overflow-x:hidden;\"\n");
      out.write("                              id=\"output\">\n");
      out.write("                              \n");
      out.write("                              ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("                           </div>\n");
      out.write("                              <!-- Message. Default to the left -->\n");
      out.write("\n");
      out.write("                              <!-- /.direct-chat-msg -->\n");
      out.write("                           \n");
      out.write("                           <!--/.direct-chat-messages-->\n");
      out.write("\n");
      out.write("                           ");
      out.write("\n");
      out.write("                           \n");
      out.write("                           <!-- /.direct-chat-pane -->\n");
      out.write("                        </div>\n");
      out.write("                        <!-- /.card-body -->\n");
      out.write("                        <div class=\"row\">\n");
      out.write("                        <div class=\"form-group col-md-12 ml-2\">\n");
      out.write("                              <input type=\"text\" id=\"wisper\" value=\"\" placeholder=\"귓속말 대상\" name=\"who\" class=\"form-control-row col-md-2\" \n");
      out.write("                              style=\"height:40px;\"> \n");
      out.write("                              \n");
      out.write("                              <input type=\"text\" placeholder=\"Type Message ...\"\n");
      out.write("                              class=\"form-control-row col-md-9\" id=\"textID\" name=\"chatInput\" style=\"height:40px;\">\n");
      out.write("                              \n");
      out.write("                              <input type=\"button\"\n");
      out.write("                              class=\"btn btn-primary form-control-row\" id=\"buttonMessage\" value=\"send\" style=\"width:100px; height:40px;\">\n");
      out.write("                           \n");
      out.write("                        </div>\n");
      out.write("                     </div>\n");
      out.write("                     <!-- /.card-footer-->\n");
      out.write("                  </div>\n");
      out.write("                  \n");
      out.write("                  <!--/.direct-chat -->\n");
      out.write("               </div>\n");
      out.write("               <!-- /.card-footer -->\n");
      out.write("               <!-- /.col -->\n");
      out.write("               <div class=\"col-md-2\" style=\"float:right\">\n");
      out.write("                  <!-- /.card-footer -->\n");
      out.write("\n");
      out.write("                  <form action=\"MoveChatRoom.do\" method=\"post\" id=\"moveChatForm\">\n");
      out.write("                     <input type=\"hidden\" name=\"roomName\" value=\"\">\n");
      out.write("                     <div class=\"info-box bg-navy\"\n");
      out.write("                        style=\"overflow: scroll; height: 265px;\" id=\"room\">\n");
      out.write("                        <!-- 전체 채팅방 -->\n");
      out.write("                        <div class=\"info-box-content\" id=\"getRoomList\"></div>\n");
      out.write("                     </div>\n");
      out.write("                  </form>\n");
      out.write("\n");
      out.write("                  <div class=\"input-group\">\n");
      out.write("                     <input type=\"text\" name=\"message\" placeholder=\"방 제목\"\n");
      out.write("                        class=\"form-control\" id=\"searchRoomText\"> <span\n");
      out.write("                        class=\"input-group-append\"> <input type=\"button\"\n");
      out.write("                        class=\"btn btn-primary\" value=\"search\" id=\"searchRoomBtn\">\n");
      out.write("                     </span>\n");
      out.write("                  </div>\n");
      out.write("                  <br>\n");
      out.write("                  <div class=\"row\">\n");
      out.write("                     <div class=\"col-md-12\" style=\"padding: 10px; padding-top: 0;\">\n");
      out.write("                        <input type=\"button\" class=\"btn btn-outline-info\" value=\"방 만들기\"\n");
      out.write("                           id=\"createRoom\"> <input type=\"button\"\n");
      out.write("                           class=\"btn btn-outline-info\" value=\"전체 방으로\" id=\"backBtn\">\n");
      out.write("                     </div>\n");
      out.write("                  </div>\n");
      out.write("                  <div class=\"card card-primary\" style=\"height: 370px;\">\n");
      out.write("                     <div class=\"card-header bg-navy\"\n");
      out.write("                        style=\"height: 30px; font-size: 8px; padding: 8px;\">\n");
      out.write("                        <h3 class=\"card-title\" id=\"cardTitle\">접속 인원</h3>\n");
      out.write("\n");
      out.write("                        <div class=\"card-tools\">\n");
      out.write("                           <button type=\"button\" class=\"btn btn-tool\"\n");
      out.write("                              data-card-widget=\"collapse\">\n");
      out.write("                              <i class=\"fas fa-minus\"></i>\n");
      out.write("                           </button>\n");
      out.write("                        </div>\n");
      out.write("                        <!-- /.card-tools -->\n");
      out.write("                     </div>\n");
      out.write("                     <!-- /.card-header -->\n");
      out.write("                     <div class=\"card-body\"\n");
      out.write("                        style=\"height: 150px; padding: 5px; overflow: scroll;\"\n");
      out.write("                        id=\"listPeople\"></div>\n");
      out.write("                     <div class=\"card-body\"\n");
      out.write("                        style=\"height: 150px; padding: 5px; overflow: scroll; display: none;\"\n");
      out.write("                        id=\"showCreateRoom\">\n");
      out.write("                        <!-- 방만들기 form이용 -->\n");
      out.write("\n");
      out.write("                        <form action=\"createChatRoom.do\" method=\"post\" id=\"createForm\">\n");
      out.write("                           <!-- hidden 정보  -->\n");
      out.write("                           <input type=\"hidden\" id=\"chkRoomName\" value=\"\">\n");
      out.write("                           <!-- 방 제목 중복 확인 여부 -->\n");
      out.write("\n");
      out.write("                           <!-- 방 만들기 버튼 클릭 시, 보여짐 -->\n");
      out.write("\n");
      out.write("                           <!-- 방만들기 테이블 -->\n");
      out.write("                           <table style=\"width: 100%; height: 100%\">\n");
      out.write("                              <col width=\"80px\">\n");
      out.write("                              <!-- 방제목 -->\n");
      out.write("                              <tr style=\"padding: 1px; margin: 1px\">\n");
      out.write("                                 <th>방제목</th>\n");
      out.write("                                 <td><input type=\"text\" name=\"name\" id=\"chkRoomName\" placeholder=\"방이름\"\n");
      out.write("                                    size=\"8\" class=\"form-control\"\n");
      out.write("                                    style=\"font-weight: bold; width: 100%; height: 15px\">\n");
      out.write("                                 </td>\n");
      out.write("                              </tr>\n");
      out.write("\n");
      out.write("                              <!-- 비밀번호 -->\n");
      out.write("                              <tr>\n");
      out.write("                                 <th>비밀번호</th>\n");
      out.write("                                 <td><input type=\"text\" name=\"pwd\" placeholder=\"방 비밀번호\"\n");
      out.write("                                    size=\"8\" class=\"form-control\"\n");
      out.write("                                    style=\"font-weight: bold; width: 100%; height: 15px\"\n");
      out.write("                                    title=\"작성하지않을시 공개방으로 생성됩니다\"></td>\n");
      out.write("                              </tr>\n");
      out.write("\n");
      out.write("                              <!-- 참여 인원 -->\n");
      out.write("                              <tr>\n");
      out.write("                                 <th>참여인원</th>\n");
      out.write("                                 <td><i\n");
      out.write("                                       class=\"fas fa-minus float-left\" onclick=\"count_back()\"\n");
      out.write("                                       title=\"1명 감소\"></i> <input type=\"text\" name=\"totalCount\"\n");
      out.write("                                    value=\"4\" size=\"2\" readonly=\"readonly\" id=\"count\"\n");
      out.write("                                    class=\"form-control float-left\"\n");
      out.write("                                    style=\"height: 15px; font-weight: bold; width: 50px;\">\n");
      out.write("\n");
      out.write("                                    <i class=\"fas fa-plus float-left\"\n");
      out.write("                                       onclick=\"count_next()\" title=\"1명 증가\"></i></td>\n");
      out.write("                              </tr>\n");
      out.write("                              <!-- 내용 입력 -->\n");
      out.write("                              <tr>\n");
      out.write("                                 <th>내용</th>\n");
      out.write("                                 <td><input type=\"text\" name=\"content\" placeholder=\"내용\"\n");
      out.write("                                    class=\"form-control\"\n");
      out.write("                                    style=\"font-weight: bold; width: 100%; height: 15px\">\n");
      out.write("                                 </td>\n");
      out.write("                              </tr>\n");
      out.write("                              <!-- 버튼 처리 -->\n");
      out.write("                           </table>\n");
      out.write("\n");
      out.write("                           <div class=\"row\">\n");
      out.write("                              <div class=\"col-md-12\" style=\"padding: 10px; padding-top: 0;\">\n");
      out.write("                                 <input type=\"button\" id=\"submitBtn\" value=\"방만들기\"\n");
      out.write("                                    class=\"btn btn-secondary btn-sm \" style=\"width: 100px;\">\n");
      out.write("                                 <input type=\"button\" id=\"backBtn\" value=\"돌아가기\"\n");
      out.write("                                    class=\"btn btn-secondary btn-sm\" style=\"width: 100px;\">\n");
      out.write("                              </div>\n");
      out.write("                           </div>\n");
      out.write("                        </form>\n");
      out.write("                     </div>\n");
      out.write("                     <!-- /.card-body -->\n");
      out.write("                  </div>\n");
      out.write("                  <!-- /.card -->\n");
      out.write("               </div>\n");
      out.write("               <!-- /.card -->\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <!-- /.card -->\n");
      out.write("\n");
      out.write("         </div>\n");
      out.write("         <!-- /.col -->\n");
      out.write("         <!-- /.row -->\n");
      out.write("         <!-- /.content -->\n");
      out.write("      </div>\n");
      out.write("   </div>\n");
      out.write("      \n");
      out.write("   ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\n");
      out.write("   </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("   <!-- ./wrapper -->\n");
      out.write("\n");
      out.write("   <!-- REQUIRED SCRIPTS -->\n");
      out.write("\n");
      out.write("   \n");
      out.write("   <!-- Bootstrap -->\n");
      out.write("   <script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/plugins/bootstrap/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("   <!-- AdminLTE -->\n");
      out.write("   <script\n");
      out.write("      src=\"");
      out.print(request.getContextPath());
      out.write("/resources/dist/js/adminlte.js\"></script>\n");
      out.write("\n");
      out.write("   <!-- OPTIONAL SCRIPTS -->\n");
      out.write("   <script\n");
      out.write("      src=\"");
      out.print(request.getContextPath());
      out.write("/resources/plugins/chart.js/Chart.min.js\"></script>\n");
      out.write("   <script src=\"");
      out.print(request.getContextPath());
      out.write("/resources/dist/js/demo.js\"></script>\n");
      out.write("   <script\n");
      out.write("      src=\"");
      out.print(request.getContextPath());
      out.write("/resources/dist/js/pages/dashboard3.js\"></script>\n");
      out.write("\n");
      out.write("<!-- 방제목 중복확인 -->\n");
      out.write("         <script type=\"text/javascript\">\n");
      out.write("            $(\"[name='name']\").blur(function() {\n");
      out.write("                var name = $(\"[name='name']\").val();\n");
      out.write("                \n");
      out.write("               if (name != \"\") {\n");
      out.write("                  $.ajax({\n");
      out.write("                     type : \"post\",\n");
      out.write("                     url : \"checkRoom.do\",\n");
      out.write("                     async : true,\n");
      out.write("                     data : \"name=\" + name,\n");
      out.write("                     success : function(msg) {\n");
      out.write("                        if (msg == \"1\") {\n");
      out.write("                           alert(\"생성 가능한 방이름 입니다.\");\n");
      out.write("                           $(\"#chkRoomName\").val(name);\n");
      out.write("                        } else if (msg == \"0\") {\n");
      out.write("                           alert(\"이미 존재하는 방이름 입니다.\");\n");
      out.write("                           $(\"[name='name']\").val(\"\");\n");
      out.write("                           $(\"[name='name']\").focus();\n");
      out.write("\n");
      out.write("                        }\n");
      out.write("                     },\n");
      out.write("                     error : function(){\n");
      out.write("                    \t console.log('방이름 중복검사 ajax 실패');\n");
      out.write("                     }\n");
      out.write("                  });\n");
      out.write("\n");
      out.write("               } \n");
      out.write("            });\n");
      out.write("         </script>\n");
      out.write("         <script type=\"text/javascript\">\n");
      out.write("            var sock = null;\n");
      out.write("            var grade = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberGrade}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("            var memberName = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("            var now = new Date();\n");
      out.write("            var fm = now.getHours();\n");
      out.write("            var sentDate = \"\";\n");
      out.write("            \n");
      out.write("            if(fm > 12) fm = \"오후 \" + (fm-12);\n");
      out.write("            else fm = \"오전 \" + fm;\n");
      out.write("            \n");
      out.write("            sentDate = fm + \":\"+ now.getMinutes() + \":\" + now.getSeconds();\n");
      out.write("            \n");
      out.write("            $(document).ready(function() {\n");
      out.write("                \t\t   /* if($(\"#room\").val() == \"all\"){\n");
      out.write("                \t\t\t   $.ajax({\n");
      out.write("                \t\t\t\t   url : \"readMsg\",\n");
      out.write("                \t\t\t\t   dataType : \"json\",\n");
      out.write("                \t\t\t\t   type : \"post\",\n");
      out.write("                \t\t\t\t   success : function(){\n");
      out.write("                \t\t\t\t\t   \n");
      out.write("                \t\t\t\t   },\n");
      out.write("                \t\t\t\t   error : function(){\n");
      out.write("                \t\t\t\t\t   console.log(\"readMsg ajax 통신 실패 \");\n");
      out.write("                \t\t\t\t   }\n");
      out.write("                \t\t\t\t   \n");
      out.write("                \t\t\t   });\n");
      out.write("                \t\t   }        \t */\n");
      out.write("            \t\n");
      out.write("            \t\n");
      out.write("                           $(\"#textID\").focus();// 처음 접속시 메세지입력창에 focus\n");
      out.write("\n");
      out.write("                           // 서버로 접속 할 때는 localhost로 설정해줘야됨(관리자)\n");
      out.write("                           // 본인 서버로 접속 할 경우, admin으로 들어가야만 채팅가능하다.\n");
      out.write("                           if (grade == 2) {/* 관리자 : 2 */\n");
      out.write("                              ws = new WebSocket(\n");
      out.write("                                    \"ws://localhost:8080/ojungFinal/echo.do\");\n");
      out.write("                           }\n");
      out.write("                           // 그 외 회원은 admin을 제외한 다른 아이디로 접속 시, 채팅참여가 가능하다.\n");
      out.write("                           else {\n");
      out.write("                              ws = new WebSocket(\n");
      out.write("                                    \"ws://localhost:8080/ojungFinal/echo.do\");\n");
      out.write("                           }\n");
      out.write("\n");
      out.write("                           // 서버로 메세지 보낼 때\n");
      out.write("                           ws.onopen = function() {\n");
      out.write("                        \t   \n");
      out.write("                              // 처음 접속 시에만 채팅방에 추가함(현재 방정보도 같이 출력)\n");
      out.write("                              $(\"#output\")\n");
      out.write("                                    .append(\n");
      out.write("                                          \"<div style='text-align:center;color:#ced4da;'><span class=\\\"direct-chat-name\\\">\"\n");
      out.write("                                                + $('#room')\n");
      out.write("                                                      .val()\n");
      out.write("                                                + \" 채팅방에 참여했습니다.</span></div>\");\n");
      out.write("                              //보내기 버튼 눌렀을때\n");
      out.write("                              $(\"#buttonMessage\")\n");
      out.write("                                    .click(\n");
      out.write("                                          function() {\n");
      out.write("                                             console\n");
      out.write("                                                   .log($(\n");
      out.write("                                                         'input[name=chatInput]')\n");
      out.write("                                                         .val());\n");
      out.write("                                             var msg = $(\n");
      out.write("                                                   'input[name=chatInput]')\n");
      out.write("                                                   .val()\n");
      out.write("                                                   .trim(\"!%/\"); //메시지\n");
      out.write("\n");
      out.write("                                             var wisper = $(\n");
      out.write("                                                   \"#wisper\")\n");
      out.write("                                                   .val()\n");
      out.write("                                                   .trim(\"!%/\"); //귓속말 대상자\n");
      out.write("\n");
      out.write("                                             var room = $(\n");
      out.write("                                                   \"#room\")\n");
      out.write("                                                   .val()\n");
      out.write("                                                   .trim(\"!%/\"); //방이름(전체단톡방이면 all)\n");
      out.write("\n");
      out.write("                                             //전체에게 보낼때\n");
      out.write("                                             if (wisper == \"\"\n");
      out.write("                                                   && msg != \"\") {\n");
      out.write("                                                //소켓으로 메세지 전달\n");
      out.write("                                                ws.send(msg\n");
      out.write("                                                      + \"!%/\"\n");
      out.write("                                                      + \"\"\n");
      out.write("                                                      + \"!%/\"\n");
      out.write("                                                      + room\n");
      out.write("                                                      + \"!%/\"\n");
      out.write("                                                      + sentDate);\n");
      out.write("                                                $(\"#output\")\n");
      out.write("                                                      .append(\n");
      out.write("                                                            \"<div class='direct-chat-msg right'>\"\n");
      out.write("                                                                  + \"<div class='direct-chat-infos clearfix'>\"\n");
      out.write("                                                                  + \"<span class='direct-chat-name float-right'>\"\n");
      out.write("                                                                  + memberName\n");
      out.write("                                                                  + \"</span>\"\n");
      out.write("                                                                  + \"<span class='direct-chat-timestamp float-right'>\"+ sentDate +\"</span></div>\"\n");
      out.write("                                                                  + \"<img class='direct-chat-img' src='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/dist/img/user3-128x128.jpg'>\"\n");
      out.write("                                                                  + \"<div class='direct-chat-text right-txt'>\"\n");
      out.write("                                                                  + msg\n");
      out.write("                                                                  + \"</div></div>\");\n");
      out.write("\n");
      out.write("                                                $(\"#output\")\n");
      out.write("                                                      .scrollTop(\n");
      out.write("                                                            99999999); //글 입력 시 무조건 하단으로 보냄\n");
      out.write("                                                $(\"#textID\")\n");
      out.write("                                                      .val(\"\"); //입력창 내용지우기\n");
      out.write("                                                $(\"#textID\")\n");
      out.write("                                                      .focus(); //입력창 포커스 획득\n");
      out.write("                                             }\n");
      out.write("                                             //귓속말\n");
      out.write("                                             else if (wisper != \"\"\n");
      out.write("                                                   && msg != \"\") {\n");
      out.write("                                                //본인에게 보낼경우\n");
      out.write("                                                if ($(\n");
      out.write("                                                      \"#userName\")\n");
      out.write("                                                      .val() == wisper) {\n");
      out.write("                                                   alert(\"본인에게는 보낼 수 없습니다.\");\n");
      out.write("                                                   $(\"#wisper\")\n");
      out.write("                                                         .focus();\n");
      out.write("                                                }\n");
      out.write("                                                //본인이 아닐 경우에만 메세지 전달\n");
      out.write("                                                else {\n");
      out.write("                                                   ws\n");
      out.write("                                                         .send(msg\n");
      out.write("                                                               + \"!%/\"\n");
      out.write("                                                               + wisper\n");
      out.write("                                                               + \"!%/\"\n");
      out.write("                                                               + room\n");
      out.write("                                                               + \"!%/\"\n");
      out.write("                                                               + sentDate); //현재 메세지 + 귓속말대상 + 방정보   \n");
      out.write("\n");
      out.write("                                                   $(\"#output\")\n");
      out.write("                                                         .append(\n");
      out.write("                                                               \"<i class='user icon'></i>\"\n");
      out.write("                                                                     + \"<b style='color:blue'>[");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("]</b> : \"\n");
      out.write("                                                                     + \"[<b style='color:green'>\"\n");
      out.write("                                                                     + wisper\n");
      out.write("                                                                     + \"</b>]님에게귓속말 : \"\n");
      out.write("                                                                     + msg\n");
      out.write("                                                                     + \"&nbsp;\"\n");
      out.write("                                                                     + sentDate\n");
      out.write("                                                                     + \" 에 보냄 \"\n");
      out.write("                                                                     + \"<br>\");\n");
      out.write("                                                   $(\"#output\")\n");
      out.write("                                                         .scrollTop(\n");
      out.write("                                                               99999999);\n");
      out.write("                                                   $(\"#textID\")\n");
      out.write("                                                         .val(\n");
      out.write("                                                               \"\");\n");
      out.write("                                                   $(\"#textID\")\n");
      out.write("                                                         .focus();\n");
      out.write("                                                }\n");
      out.write("\n");
      out.write("                                             }\n");
      out.write("\n");
      out.write("                                          });\n");
      out.write("                              //엔터키 입력처리\n");
      out.write("                              $(\"#textID\")\n");
      out.write("                                    .keypress(\n");
      out.write("                                          function(event) {\n");
      out.write("                                             if (event.which == \"13\") {\n");
      out.write("                                                event\n");
      out.write("                                                      .preventDefault();\n");
      out.write("\n");
      out.write("                                                var msg = $(\n");
      out.write("                                                      'input[name=chatInput]')\n");
      out.write("                                                      .val()\n");
      out.write("                                                      .trim(\n");
      out.write("                                                            \"!%/\"); //메시지\n");
      out.write("\n");
      out.write("                                                var wisper = $(\n");
      out.write("                                                      \"#wisper\")\n");
      out.write("                                                      .val()\n");
      out.write("                                                      .trim(\n");
      out.write("                                                            \"!%/\"); //귓속말 대상자\n");
      out.write("\n");
      out.write("                                                var room = $(\n");
      out.write("                                                      \"#room\")\n");
      out.write("                                                      .val()\n");
      out.write("                                                      .trim(\n");
      out.write("                                                            \"!%/\"); //방이름(전체단톡방이면 all)\n");
      out.write("\n");
      out.write("                                                //전체에게 보낼때\n");
      out.write("                                                if (wisper == \"\"\n");
      out.write("                                                      && msg != \"\") {\n");
      out.write("                                                   //소켓으로 메세지 전달\n");
      out.write("\n");
      out.write("                                                   ws\n");
      out.write("                                                         .send(msg\n");
      out.write("                                                               + \"!%/\"\n");
      out.write("                                                               + \"\"\n");
      out.write("                                                               + \"!%/\"\n");
      out.write("                                                               + room\n");
      out.write("                                                               + \"!%/\"\n");
      out.write("                                                               + sentDate);\n");
      out.write("                                                   $(\"#output\")\n");
      out.write("                                                         .append(\n");
      out.write("                                                               \"<div class='direct-chat-msg right'>\"\n");
      out.write("                                                                     + \"<div class='direct-chat-infos clearfix'>\"\n");
      out.write("                                                                     + \"<span class='direct-chat-name float-right'>\"\n");
      out.write("                                                                     + memberName\n");
      out.write("                                                                     + \"</span>\"\n");
      out.write("                                                                     + \"<span class='direct-chat-timestamp float-right'>\"+ sentDate +\"</span></div>\"\n");
      out.write("                                                                     + \"<img class='direct-chat-img clear:both' src='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/dist/img/user3-128x128.jpg'>\"\n");
      out.write("                                                                     + \"<div class='direct-chat-text right-txt'>\"\n");
      out.write("                                                                     + msg\n");
      out.write("                                                                     + \"</div></div>\");\n");
      out.write("\n");
      out.write("                                                   $(\"#output\")\n");
      out.write("                                                         .scrollTop(\n");
      out.write("                                                               99999999); //글 입력 시 무조건 하단으로 보냄\n");
      out.write("                                                   $(\"#textID\")\n");
      out.write("                                                         .val(\n");
      out.write("                                                               \"\"); //입력창 내용지우기\n");
      out.write("                                                   $(\"#textID\")\n");
      out.write("                                                         .focus(); //입력창 포커스 획득\n");
      out.write("                                                }\n");
      out.write("                                                //귓속말\n");
      out.write("                                                else if (wisper != \"\"\n");
      out.write("                                                      && msg != \"\") {\n");
      out.write("                                                   //본인에게 보낼경우\n");
      out.write("                                                   if ($(\n");
      out.write("                                                         \"#userName\")\n");
      out.write("                                                         .val() == wisper) {\n");
      out.write("                                                      alert(\"본인에게는 보낼 수 없습니다.\");\n");
      out.write("                                                      $(\n");
      out.write("                                                            \"#wisper\")\n");
      out.write("                                                            .focus();\n");
      out.write("                                                   }\n");
      out.write("                                                   //본인이 아닐 경우에만 메세지 전달\n");
      out.write("                                                   else {\n");
      out.write("                                                      ws\n");
      out.write("                                                            .send(msg\n");
      out.write("                                                                  + \"!%/\"\n");
      out.write("                                                                  + wisper\n");
      out.write("                                                                  + \"!%/\"\n");
      out.write("                                                                  + room\n");
      out.write("                                                                  + \"!%/\"\n");
      out.write("                                                                  + sentDate); //현재 메세지 + 귓속말대상 + 방정보   \n");
      out.write("\n");
      out.write("                                                      $(\n");
      out.write("                                                            \"#output\")\n");
      out.write("                                                            .append(\n");
      out.write("                                                                  \"<i class='user icon'></i>\"\n");
      out.write("                                                                        + \"<b style='color:blue'>[");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("]</b> : \"\n");
      out.write("                                                                        + \"[<b style='color:green'>\"\n");
      out.write("                                                                        + wisper\n");
      out.write("                                                                        + \"</b>]님에게귓속말 : \"\n");
      out.write("                                                                        + msg\n");
      out.write("                                                                        + \"&nbsp;\"\n");
      out.write("                                                                        + sentDate\n");
      out.write("                                                                        + \" 에 보냄\"\n");
      out.write("                                                                        + \"<br>\");\n");
      out.write("                                                      $(\n");
      out.write("                                                            \"#output\")\n");
      out.write("                                                            .scrollTop(\n");
      out.write("                                                                  99999999);\n");
      out.write("                                                      $(\n");
      out.write("                                                            \"#textID\")\n");
      out.write("                                                            .val(\n");
      out.write("                                                                  \"\");\n");
      out.write("                                                      $(\n");
      out.write("                                                            \"#textID\")\n");
      out.write("                                                            .focus();\n");
      out.write("                                                   }\n");
      out.write("\n");
      out.write("                                                }\n");
      out.write("                                             }\n");
      out.write("                                          });\n");
      out.write("                              //방만들기\n");
      out.write("                              $(\"#createRoom\").on(\n");
      out.write("                                    \"click\",\n");
      out.write("                                    function() {\n");
      out.write("                                       $(\"#listPeople\")\n");
      out.write("                                             .slideToggle(300);\n");
      out.write("                                       $(\"#showCreateRoom\")\n");
      out.write("                                             .slideToggle(300);\n");
      out.write("\n");
      out.write("                                       var cardTitle = $(\n");
      out.write("                                             \"#cardTitle\")\n");
      out.write("                                             .text();\n");
      out.write("                                       if (cardTitle == '접속 인원') {\n");
      out.write("                                          $(\"#cardTitle\").text(\n");
      out.write("                                                \"방 만들기\");\n");
      out.write("                                       } else {\n");
      out.write("                                          $(\"#cardTitle\").text(\n");
      out.write("                                                \"접속 인원\");\n");
      out.write("                                       }\n");
      out.write("                                    });\n");
      out.write("\n");
      out.write("                              /* <!-- 버튼처리 --> */\n");
      out.write("                              $(\"#submitBtn\")\n");
      out.write("                                    .click(\n");
      out.write("                                          function() {\n");
      out.write("                                             if ($(\n");
      out.write("                                                   \"[name='name']\")\n");
      out.write("                                                   .val().length < 1) {\n");
      out.write("                                                alert(\"방제목을 입력하세요\");\n");
      out.write("                                                $(\n");
      out.write("                                                      \"[name='name']\")\n");
      out.write("                                                      .focus();\n");
      out.write("                                             } else if ($(\n");
      out.write("                                                   \"[name='name']\")\n");
      out.write("                                                   .val() == \"all\") {\n");
      out.write("                                                alert(\"해당 방제목은 사용할 수 없습니다.\");\n");
      out.write("                                             } else if ($(\n");
      out.write("                                                   \"#chkRoomName\")\n");
      out.write("                                                   .val() == \"\") {\n");
      out.write("                                            \t alert(\"이미 존재하는 방입니다.\");\n");
      out.write("                                                $(\n");
      out.write("                                                      \"[name='name']\")\n");
      out.write("                                                      .focus();\n");
      out.write("                                             } else if ($(\n");
      out.write("                                                   \"[name='content']\")\n");
      out.write("                                                   .val().length < 1) {\n");
      out.write("                                                alert(\"방을 설명하기위한 내용을 입력하세요\");\n");
      out.write("                                                $(\n");
      out.write("                                                      \"[name='content']\")\n");
      out.write("                                                      .focus();\n");
      out.write("                                             } else { \n");
      out.write("                                                //form처리\n");
      out.write("                                                 $(\"#createForm\")\n");
      out.write("                                                      .attr(\"target\",\"_self\").submit(); \n");
      out.write("                                            \t}\n");
      out.write("                                          });\n");
      out.write("\n");
      out.write("                              $(\"#backBtn\").click(\n");
      out.write("                                    function() {\n");
      out.write("                                       $(\"form\").each(function() {\n");
      out.write("                                          this.reset();\n");
      out.write("                                       });\n");
      out.write("                                       $(\"#listPeople\")\n");
      out.write("                                             .slideToggle(300);\n");
      out.write("                                       $(\"#showCreateRoom\")\n");
      out.write("                                             .slideToggle(300);\n");
      out.write("                                    });\n");
      out.write("\n");
      out.write("                              //방 검색\n");
      out.write("                              $(\"#searchRoomBtn\")\n");
      out.write("                                    .click(\n");
      out.write("                                          function() {\n");
      out.write("\n");
      out.write("                                             //검색어\n");
      out.write("                                             var text = $(\n");
      out.write("                                                   \"#searchRoomText\")\n");
      out.write("                                                   .val()\n");
      out.write("                                                   .trim(\n");
      out.write("                                                         \"!%/&\");\n");
      out.write("                                             ws.send(\"!%/&\"\n");
      out.write("                                                   + text);\n");
      out.write("\n");
      out.write("                                             $(\"#searchRoomText\")\n");
      out.write("                                                   .val(\"\");\n");
      out.write("\n");
      out.write("                                          });\n");
      out.write("                           };\n");
      out.write("                           //서버로 부터 받은 메세지 보내주기\n");
      out.write("                           ws.onmessage = function(message) {\n");
      out.write("                        \t   \n");
      out.write("\n");
      out.write("                              //메세지 \n");
      out.write("                              var jsonData = JSON.parse(message.data);\n");
      out.write("\n");
      out.write("                              if (jsonData.message != null) {\n");
      out.write("                                 $(\"#output\").append(\n");
      out.write("                                       jsonData.message + \"<br>\");\n");
      out.write("                                 $(\"#output\").scrollTop(99999999);\n");
      out.write("                              }\n");
      out.write("\n");
      out.write("                              //접속자리스트\n");
      out.write("                              var jsonData2 = JSON\n");
      out.write("                                    .parse(message.data);\n");
      out.write("                              if (jsonData2.list != null) {\n");
      out.write("                                 $(\"#listPeople\").html(\n");
      out.write("                                       jsonData2.list);\n");
      out.write("                              }\n");
      out.write("\n");
      out.write("                              //방 정보\n");
      out.write("                              var jsonData3 = JSON\n");
      out.write("                                    .parse(message.data);\n");
      out.write("                              if (jsonData3.room != null) {\n");
      out.write("                                 //alert(jsonData3.room);\n");
      out.write("                                 var roomSplit = jsonData3.room\n");
      out.write("                                       .split(',');\n");
      out.write("\n");
      out.write("                                 var str = \"<div class='item'><div class='content'>\"\n");
      out.write("                                       + \"<b title='전체채팅방입니다' class= 'chatRoom' \"\n");
      out.write("                                       + \"onclick=\\\"moveRoom('all',0,10000,'null')\\\">\"\n");
      out.write("                                       + \"전체 채팅방</b> (총 \"\n");
      out.write("                                       + roomSplit[0]\n");
      out.write("                                       + \"명 참여)</div></div>\";\n");
      out.write("\n");
      out.write("                                 for (i = 1; i < roomSplit.length; i++) {\n");
      out.write("                                    var spl = roomSplit[i]\n");
      out.write("                                          .split(\"/\");\n");
      out.write("\n");
      out.write("                                    if (spl[0] == '방이 존재하지 않습니다.') {\n");
      out.write("                                       str += \"<div class='item'><div class='content'><b title='방이존재하지않습니다'>\"\n");
      out.write("                                             + spl[0]\n");
      out.write("                                             + \"</b></div></div>\";\n");
      out.write("                                    } else {\n");
      out.write("                                       //방이름 : spl[0] , 남은인원수 : spl[1] , 전체인원수:spl[2], 방내용:spl[3]\n");
      out.write("                                       str += \"<div class='item'><div class='content'><b title='\"\n");
      out.write("                                             + spl[3]\n");
      out.write("                                             + \"' class='chatRoom' \"\n");
      out.write("                                             + \"onclick=\\\"moveRoom('\"\n");
      out.write("                                             + spl[0]\n");
      out.write("                                             + \"','\"\n");
      out.write("                                             + spl[1]\n");
      out.write("                                             + \"','\"\n");
      out.write("                                             + spl[2]\n");
      out.write("                                             + \"','\"\n");
      out.write("                                             + spl[4]\n");
      out.write("                                             + \"')\\\"> \"\n");
      out.write("                                             + spl[0]\n");
      out.write("                                             + \"</b> (\"\n");
      out.write("                                             + spl[1]\n");
      out.write("                                             + \"/\"\n");
      out.write("                                             + spl[2]\n");
      out.write("                                             + \")</div></div>\";\n");
      out.write("                                    }\n");
      out.write("\n");
      out.write("                                 }\n");
      out.write("\n");
      out.write("                                 $(\"#getRoomList\").html(str);\n");
      out.write("\n");
      out.write("                                 //moveRoom(room,remaincount,totalcount,pwd)\n");
      out.write("                              }\n");
      out.write("\n");
      out.write("                           };\n");
      out.write("\n");
      out.write("                           //닫힐때\n");
      out.write("                           ws.onclose = function(event) {\n");
      out.write("                           };\n");
      out.write("                        });\n");
      out.write("            /* <!-- 방이동 처리함수 --> */\n");
      out.write("            function moveRoom(room, remaincount, totalcount, pwd) {\n");
      out.write("               var currentRoom = $(\"#room\").val(); //현재자신이있는방\n");
      out.write("               \n");
      out.write("               \n");
      out.write("               if (room == currentRoom) {\n");
      out.write("                  //들어가고자하는방 = 현재자신의방\n");
      out.write("                  alert(\"현재 선택하신 방에 있습니다.\");\n");
      out.write("               }\n");
      out.write("               //방 이동 처리\n");
      out.write("               else {\n");
      out.write("                  if (parseInt(remaincount) < parseInt(totalcount)) {\n");
      out.write("                     if (pwd != 'null') {\n");
      out.write("                        var chkPwd = prompt(\"비밀번호를 입력하세요.\");\n");
      out.write("                        if (chkPwd == pwd) {\n");
      out.write("                           $(\"[name='roomName']\").val(room);\n");
      out.write("                           $(\"#moveChatForm\").attr(\"target\", \"_self\")\n");
      out.write("                                 .submit();\n");
      out.write("                        } else {\n");
      out.write("                           alert(\"비밀번호가 틀렸습니다.\");\n");
      out.write("                        }\n");
      out.write("                     } else {\n");
      out.write("                        //비밀번호가 없다면 바로 이동하도록한다.\n");
      out.write("                        $(\"[name='roomName']\").val(room);\n");
      out.write("                        $(\"#moveChatForm\").attr(\"target\", \"_self\").submit();\n");
      out.write("                        \n");
      out.write("                     }\n");
      out.write("\n");
      out.write("                  } else {\n");
      out.write("                     alert(\"인원 수가 가득찼습니다.\");\n");
      out.write("                  }\n");
      out.write("                  \n");
      out.write("               }\n");
      out.write("            };\n");
      out.write("            \n");
      out.write("            \n");
      out.write("            \n");
      out.write("            //방나가기\n");
      out.write("            $(\"#backBtn\").click(function() {\n");
      out.write("               location.href = \"chat.do\";\n");
      out.write("            });\n");
      out.write("         </script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/chatting/chat.jsp(175,30) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${room == 'all'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("전체 채팅방");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/chatting/chat.jsp(176,30) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${room != 'all'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${room}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/chatting/chat.jsp(203,30) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("i");
      // /WEB-INF/views/chatting/chat.jsp(203,30) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/chatting/chat.jsp(203,30) '${msgList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${msgList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("\t                              ");
            if (_jspx_meth_c_005fforEach_005f1(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\n");
            out.write("                              \n");
            out.write("                              \n");
            out.write("                              \n");
            out.write("                              ");
            if (_jspx_meth_c_005fchoose_005f1(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\n");
            out.write("                              \t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /WEB-INF/views/chatting/chat.jsp(204,31) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("each");
      // /WEB-INF/views/chatting/chat.jsp(204,31) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/chatting/chat.jsp(204,31) '${i}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${i}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/chatting/chat.jsp(204,31) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVarStatus("vs");
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("\t                              ");
            if (_jspx_meth_c_005fchoose_005f0(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
              return true;
            out.write("\n");
            out.write("\t                              ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t                              \t");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
            return true;
          out.write("\n");
          out.write("\t                              \t");
          if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
            return true;
          out.write("\n");
          out.write("\t                              \t");
          if (_jspx_meth_c_005fwhen_005f2(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
            return true;
          out.write("\n");
          out.write("\t                              \t");
          if (_jspx_meth_c_005fwhen_005f3(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
            return true;
          out.write("\n");
          out.write("\t                              \t");
          if (_jspx_meth_c_005fwhen_005f4(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
            return true;
          out.write("\n");
          out.write("\t                              ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/chatting/chat.jsp(206,32) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vs.index == 0}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t                              \t\t");
          if (_jspx_meth_c_005fset_005f0(_jspx_th_c_005fwhen_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
            return true;
          out.write("\n");
          out.write("\t                              \t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f0);
      // /WEB-INF/views/chatting/chat.jsp(207,33) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("chatContent");
      // /WEB-INF/views/chatting/chat.jsp(207,33) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/chatting/chat.jsp(207,33) '${each}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${each}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f1_reused = false;
    try {
      _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/chatting/chat.jsp(209,32) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vs.index == 1}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
      if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write(" <!-- 귓속말 -->\n");
          out.write("\t                              \t\t");
          if (_jspx_meth_c_005fset_005f1(_jspx_th_c_005fwhen_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
            return true;
          out.write("\n");
          out.write("\t                              \t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
      _jspx_th_c_005fwhen_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f1_reused = false;
    try {
      _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f1);
      // /WEB-INF/views/chatting/chat.jsp(210,33) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setVar("whisper");
      // /WEB-INF/views/chatting/chat.jsp(210,33) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/chatting/chat.jsp(210,33) '${each }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${each }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
      if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
      _jspx_th_c_005fset_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f2 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f2_reused = false;
    try {
      _jspx_th_c_005fwhen_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/chatting/chat.jsp(212,32) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vs.index == 2}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f2 = _jspx_th_c_005fwhen_005f2.doStartTag();
      if (_jspx_eval_c_005fwhen_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t                              \t\t");
          if (_jspx_meth_c_005fset_005f2(_jspx_th_c_005fwhen_005f2, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
            return true;
          out.write("\n");
          out.write("\t                              \t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f2);
      _jspx_th_c_005fwhen_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f2, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f2 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f2_reused = false;
    try {
      _jspx_th_c_005fset_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f2);
      // /WEB-INF/views/chatting/chat.jsp(213,33) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f2.setVar("roomName");
      // /WEB-INF/views/chatting/chat.jsp(213,33) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f2.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/chatting/chat.jsp(213,33) '${each }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${each }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f2 = _jspx_th_c_005fset_005f2.doStartTag();
      if (_jspx_th_c_005fset_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f2);
      _jspx_th_c_005fset_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f3 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f3_reused = false;
    try {
      _jspx_th_c_005fwhen_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/chatting/chat.jsp(215,32) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vs.index == 3}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f3 = _jspx_th_c_005fwhen_005f3.doStartTag();
      if (_jspx_eval_c_005fwhen_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t                              \t\t");
          if (_jspx_meth_c_005fset_005f3(_jspx_th_c_005fwhen_005f3, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
            return true;
          out.write("\n");
          out.write("\t                              \t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f3);
      _jspx_th_c_005fwhen_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f3, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f3 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f3_reused = false;
    try {
      _jspx_th_c_005fset_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f3);
      // /WEB-INF/views/chatting/chat.jsp(216,33) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f3.setVar("sendTime");
      // /WEB-INF/views/chatting/chat.jsp(216,33) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f3.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/chatting/chat.jsp(216,33) '${each }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${each }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f3 = _jspx_th_c_005fset_005f3.doStartTag();
      if (_jspx_th_c_005fset_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f3);
      _jspx_th_c_005fset_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f4 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f4_reused = false;
    try {
      _jspx_th_c_005fwhen_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/chatting/chat.jsp(218,32) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f4.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vs.index == 4}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f4 = _jspx_th_c_005fwhen_005f4.doStartTag();
      if (_jspx_eval_c_005fwhen_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t                              \t\t");
          if (_jspx_meth_c_005fset_005f4(_jspx_th_c_005fwhen_005f4, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
            return true;
          out.write("\n");
          out.write("\t                              \t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f4.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f4);
      _jspx_th_c_005fwhen_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f4, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f4, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f4 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f4_reused = false;
    try {
      _jspx_th_c_005fset_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f4);
      // /WEB-INF/views/chatting/chat.jsp(219,33) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f4.setVar("writer");
      // /WEB-INF/views/chatting/chat.jsp(219,33) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f4.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/chatting/chat.jsp(219,33) '${each }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${each }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f4 = _jspx_th_c_005fset_005f4.doStartTag();
      if (_jspx_th_c_005fset_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f4);
      _jspx_th_c_005fset_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f4, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f1 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f1_reused = false;
    try {
      _jspx_th_c_005fchoose_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      int _jspx_eval_c_005fchoose_005f1 = _jspx_th_c_005fchoose_005f1.doStartTag();
      if (_jspx_eval_c_005fchoose_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                              \t");
          if (_jspx_meth_c_005fwhen_005f5(_jspx_th_c_005fchoose_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\n");
          out.write("                              \t");
          if (_jspx_meth_c_005fwhen_005f6(_jspx_th_c_005fchoose_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\n");
          out.write("                              \t\n");
          out.write("                              \t");
          if (_jspx_meth_c_005fwhen_005f7(_jspx_th_c_005fchoose_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\n");
          out.write("                              \t\n");
          out.write("                              \t");
          if (_jspx_meth_c_005fwhen_005f8(_jspx_th_c_005fchoose_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\n");
          out.write("                              \t");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\n");
          out.write("                              \t");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f1);
      _jspx_th_c_005fchoose_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f5 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f5_reused = false;
    try {
      _jspx_th_c_005fwhen_005f5.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      // /WEB-INF/views/chatting/chat.jsp(227,31) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f5.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${whisper != 'emp' && writer != loginMember.memberName}}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f5 = _jspx_th_c_005fwhen_005f5.doStartTag();
      if (_jspx_eval_c_005fwhen_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                              \t\t<!-- 귓속말 -->\n");
          out.write("                              \t\t<a href='#none' onclick=\"insertWisper('");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${writer  }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("')\">\n");
          out.write("\t\t\t\t\t\t\t\t\t<i class='user icon'></i>\n");
          out.write("\t\t\t\t\t\t\t\t\t<b style='color:green'>[");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${writer }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("]</b></a>님의 귓속말 : ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${chatContent }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("&nbsp;\n");
          out.write("\t\t\t\t\t\t\t\t\t");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sendTime }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(" 에 보냄 \n");
          out.write("\t\t\t\t\t\t\t\t\t<br>  \n");
          out.write("                              \t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f5.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f5);
      _jspx_th_c_005fwhen_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f5, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f6 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f6_reused = false;
    try {
      _jspx_th_c_005fwhen_005f6.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      // /WEB-INF/views/chatting/chat.jsp(235,31) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f6.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${whisper != 'emp' && writer == loginMember.memberName}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f6 = _jspx_th_c_005fwhen_005f6.doStartTag();
      if (_jspx_eval_c_005fwhen_005f6 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                              \t<!-- 내가 상대에게 보낸 귓속말 -->\n");
          out.write("                              \t<i class='user icon'></i>\n");
          out.write("\t\t\t\t\t\t\t\t<b style='color:blue'>[");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("]</b> : \n");
          out.write("\t\t\t\t\t\t\t\t[<b style='color:green'>\n");
          out.write("\t\t\t\t\t\t\t\t");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${whisper }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t</b>]님에게귓속말 : \n");
          out.write("\t\t\t\t\t\t\t\t");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${chatContent }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t&nbsp;\n");
          out.write("\t\t\t\t\t\t\t\t");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sendTime }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t 에 보냄 \n");
          out.write("\t\t\t\t\t\t\t\t<br>   \n");
          out.write("                              \t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f6.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f6);
      _jspx_th_c_005fwhen_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f6, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f7(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f7 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f7_reused = false;
    try {
      _jspx_th_c_005fwhen_005f7.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      // /WEB-INF/views/chatting/chat.jsp(249,31) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f7.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberName == writer}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f7 = _jspx_th_c_005fwhen_005f7.doStartTag();
      if (_jspx_eval_c_005fwhen_005f7 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t                              \t<div class='direct-chat-msg right'>\n");
          out.write("\t\t\t\t\t\t\t\t\t<div class='direct-chat-infos clearfix'>\n");
          out.write("\t\t\t\t\t\t\t\t\t<span class='direct-chat-name float-right'>\n");
          out.write("\t\t\t\t\t\t\t\t\t ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t</span>\n");
          out.write("\t\t\t\t\t\t\t\t\t<span class='direct-chat-timestamp float-right'> ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sendTime }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(" </span></div>\n");
          out.write("\t\t\t\t\t\t\t\t\t<img class='direct-chat-img' src='");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/resources/dist/img/user3-128x128.jpg'>\n");
          out.write("\t\t\t\t\t\t\t\t\t<div class='direct-chat-text right-txt'>\n");
          out.write("\t\t\t\t\t\t\t\t\t ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${chatContent }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\n");
          out.write("\t\t\t\t\t\t\t\t\t</div></div>\n");
          out.write("                              \t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f7.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f7);
      _jspx_th_c_005fwhen_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f7, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f8(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f8 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f8_reused = false;
    try {
      _jspx_th_c_005fwhen_005f8.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f8.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      // /WEB-INF/views/chatting/chat.jsp(262,31) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f8.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberName != writer}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f8 = _jspx_th_c_005fwhen_005f8.doStartTag();
      if (_jspx_eval_c_005fwhen_005f8 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                              \t\t<!-- 왼쪽 말풍선 -->\n");
          out.write("                              \t\t<div class=\"direct-chat-msg\"> \n");
          out.write("\t\t\t\t\t\t\t\t\t<div class=\"direct-chat-infos clearfix\"> \n");
          out.write("\t\t\t\t\t\t\t\t\t<span class=\"direct-chat-name float-left\">\n");
          out.write("\t\t\t\t\t\t\t\t\t<a href='#none' onclick=\"insertWisper('name')\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${writer }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</a>\n");
          out.write("\t\t\t\t\t\t\t\t\t</span>  \n");
          out.write("\t\t\t\t\t\t\t\t\t<span class=\"direct-chat-timestamp float-left\"> ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sendTime }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(" </span></div>  \n");
          out.write("\t\t\t\t\t\t\t\t\t<img class=\"direct-chat-img\" src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/resources/dist/img/user1-128x128.jpg\" alt=\"Message User Image\">\n");
          out.write("\t\t\t\t\t\t\t\t\t<div class=\"direct-chat-text left-txt\">  \n");
          out.write("\t\t\t\t\t\t\t\t\t");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${chatContent }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("  </div></div>\n");
          out.write("\t\t\t\t\t\t\t\t\t\n");
          out.write("                              \t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f8.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f8);
      _jspx_th_c_005fwhen_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f8, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                              \t");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }
}
